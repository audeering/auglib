Search.setIndex({"docnames": ["api/auglib", "api/auglib.Augment", "api/auglib.Time", "api/auglib.clear_default_cache_root", "api/auglib.config", "api/auglib.default_cache_root", "api/auglib.observe", "api/auglib.observe.Base", "api/auglib.observe.Bool", "api/auglib.observe.FloatNorm", "api/auglib.observe.FloatUni", "api/auglib.observe.IntUni", "api/auglib.observe.List", "api/auglib.observe.observe", "api/auglib.seed", "api/auglib.transform", "api/auglib.transform.AMRNB", "api/auglib.transform.Append", "api/auglib.transform.AppendValue", "api/auglib.transform.BabbleNoise", "api/auglib.transform.BandPass", "api/auglib.transform.BandStop", "api/auglib.transform.Base", "api/auglib.transform.Clip", "api/auglib.transform.ClipByRatio", "api/auglib.transform.Compose", "api/auglib.transform.CompressDynamicRange", "api/auglib.transform.FFTConvolve", "api/auglib.transform.Fade", "api/auglib.transform.Function", "api/auglib.transform.GainStage", "api/auglib.transform.HighPass", "api/auglib.transform.LowPass", "api/auglib.transform.Mask", "api/auglib.transform.Mix", "api/auglib.transform.NormalizeByPeak", "api/auglib.transform.PinkNoise", "api/auglib.transform.Prepend", "api/auglib.transform.PrependValue", "api/auglib.transform.Resample", "api/auglib.transform.Select", "api/auglib.transform.Shift", "api/auglib.transform.Tone", "api/auglib.transform.Trim", "api/auglib.transform.WhiteNoiseGaussian", "api/auglib.transform.WhiteNoiseUniform", "api/auglib.utils", "api/auglib.utils.from_db", "api/auglib.utils.rms_db", "api/auglib.utils.to_db", "api/auglib.utils.to_samples", "changelog", "contributing", "examples", "external", "genindex", "index", "install", "usage"], "filenames": ["api/auglib.rst", "api/auglib.Augment.rst", "api/auglib.Time.rst", "api/auglib.clear_default_cache_root.rst", "api/auglib.config.rst", "api/auglib.default_cache_root.rst", "api/auglib.observe.rst", "api/auglib.observe.Base.rst", "api/auglib.observe.Bool.rst", "api/auglib.observe.FloatNorm.rst", "api/auglib.observe.FloatUni.rst", "api/auglib.observe.IntUni.rst", "api/auglib.observe.List.rst", "api/auglib.observe.observe.rst", "api/auglib.seed.rst", "api/auglib.transform.rst", "api/auglib.transform.AMRNB.rst", "api/auglib.transform.Append.rst", "api/auglib.transform.AppendValue.rst", "api/auglib.transform.BabbleNoise.rst", "api/auglib.transform.BandPass.rst", "api/auglib.transform.BandStop.rst", "api/auglib.transform.Base.rst", "api/auglib.transform.Clip.rst", "api/auglib.transform.ClipByRatio.rst", "api/auglib.transform.Compose.rst", "api/auglib.transform.CompressDynamicRange.rst", "api/auglib.transform.FFTConvolve.rst", "api/auglib.transform.Fade.rst", "api/auglib.transform.Function.rst", "api/auglib.transform.GainStage.rst", "api/auglib.transform.HighPass.rst", "api/auglib.transform.LowPass.rst", "api/auglib.transform.Mask.rst", "api/auglib.transform.Mix.rst", "api/auglib.transform.NormalizeByPeak.rst", "api/auglib.transform.PinkNoise.rst", "api/auglib.transform.Prepend.rst", "api/auglib.transform.PrependValue.rst", "api/auglib.transform.Resample.rst", "api/auglib.transform.Select.rst", "api/auglib.transform.Shift.rst", "api/auglib.transform.Tone.rst", "api/auglib.transform.Trim.rst", "api/auglib.transform.WhiteNoiseGaussian.rst", "api/auglib.transform.WhiteNoiseUniform.rst", "api/auglib.utils.rst", "api/auglib.utils.from_db.rst", "api/auglib.utils.rms_db.rst", "api/auglib.utils.to_db.rst", "api/auglib.utils.to_samples.rst", "changelog.rst", "contributing.rst", "examples.rst", "external.rst", "genindex.rst", "index.rst", "install.rst", "usage.rst"], "titles": ["auglib", "Augment", "Time", "clear_default_cache_root()", "config", "default_cache_root()", "auglib.observe", "Base", "Bool", "FloatNorm", "FloatUni", "IntUni", "List", "observe()", "seed()", "auglib.transform", "AMRNB", "Append", "AppendValue", "BabbleNoise", "BandPass", "BandStop", "Base", "Clip", "ClipByRatio", "Compose", "CompressDynamicRange", "FFTConvolve", "Fade", "Function", "GainStage", "HighPass", "LowPass", "Mask", "Mix", "NormalizeByPeak", "PinkNoise", "Prepend", "PrependValue", "Resample", "Select", "Shift", "Tone", "Trim", "WhiteNoiseGaussian", "WhiteNoiseUniform", "auglib.utils", "from_db()", "rms_db()", "to_db()", "to_samples()", "Changelog", "Contributing", "Examples", "External Solutions", "Index", "auglib", "Installation", "Usage"], "terms": {"class": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 54], "auglib": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58], "none": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51], "fals": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 53, 54, 58], "1": [1, 2, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 53, 54, 58], "sourc": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 57], "interfac": [1, 3, 5, 7, 51, 58], "provid": [1, 2, 6, 29, 43, 50, 51, 53, 54, 56, 58], "an": [1, 2, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 52, 53, 54, 56, 58], "turn": 1, "object": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 53, 54, 58], "can": [1, 2, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 52, 53, 56, 57, 58], "appli": [1, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 53, 54, 58], "signal": [1, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 51, 53, 54, 56], "file": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 52, 53, 54, 56], "": [1, 19, 28, 33, 36, 41, 43, 50, 53, 54, 58], "audformat": [1, 51, 58], "databas": [1, 53, 58], "If": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51, 52, 53, 58], "input": [1, 16, 26, 27, 29, 43, 47, 49, 51, 53, 58], "ha": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51], "multipl": 1, "each": [1, 6, 36, 51, 53], "i": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51, 52, 53, 54, 56, 58], "individu": [1, 34], "e": [1, 2, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 52, 54, 57], "case": [1, 2, 34, 50], "random": [1, 2, 6, 12, 14, 34, 51, 58], "ar": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 51, 52, 53, 58], "us": [1, 2, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 52, 53, 54, 58], "differ": [1, 2, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 58], "more": [1, 53], "detail": 1, "discuss": [1, 54], "under": [1, 51, 57], "usag": [1, 51], "return": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 53, 54, 58], "np": [1, 15, 19, 20, 21, 27, 28, 29, 31, 32, 36, 39, 42, 44, 45, 53], "ndarrai": [1, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "index": [1, 51, 58], "column": 1, "hold": [1, 6, 53, 58], "y": [1, 52, 58], "tabl": [1, 43, 53, 58], "write": [1, 34, 51], "result": [1, 23, 24, 26, 27, 30, 43, 50, 51, 56, 58], "disk": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "point": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 53, 58], "df": [1, 53, 58], "inherit": 1, "from": [1, 2, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 52, 53, 54, 58], "audobject": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 58], "which": [1, 19, 23, 24, 26, 33, 34, 43, 51, 53, 56, 57], "mean": [1, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 51, 53], "you": [1, 15, 52, 53, 54, 58], "serial": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51], "instanti": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 58], "yaml": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 58], "By": [1, 6, 33, 34], "set": [1, 2, 4, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51, 53, 58], "further": [1, 56, 58], "ensur": [1, 51], "re": [1, 2, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 52, 53, 58], "run": [1, 20, 21, 31, 32, 57], "load": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 58], "form": [1, 51], "creat": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 57, 58], "same": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 53, 58], "output": [1, 26], "have": [1, 16, 19, 34, 51, 53, 56, 58], "look": [1, 54, 56, 58], "see": [1, 2, 17, 18, 28, 30, 33, 34, 37, 38, 41, 43, 53, 58], "all": [1, 14, 19, 26, 28, 43, 51, 52, 53, 54, 58], "avail": [1, 20, 21, 28, 31, 32, 43, 52, 54], "method": [1, 51, 58], "The": [1, 2, 5, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 52, 53, 54, 58], "follow": [1, 6, 28, 43, 52, 53, 54], "For": [1, 6, 29, 51, 53, 54], "inform": [1, 53, 58], "section": [1, 43, 51, 53], "hidden": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "paramet": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 53, 54], "core": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 58], "base": [1, 2, 6, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51], "type": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50], "option": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51], "int": [1, 2, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51], "sampl": [1, 2, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51, 53], "rate": [1, 2, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51, 53], "hz": [1, 2, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 53], "call": [1, 2, 6, 7, 29, 51, 52, 53, 54, 58], "actual": [1, 51], "bool": [1, 2, 7, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51], "true": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 53], "enforc": 1, "given": [1, 2, 5, 8, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 53], "union": [1, 2, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50], "sequenc": [1, 19, 25, 40], "select": [1, 28, 34, 43, 53], "audresampl": [1, 39], "remix": 1, "mono": 1, "mix": [1, 31, 32, 51, 53], "down": 1, "end": [1, 17, 18, 28, 33, 34, 41, 43, 51, 53, 58], "nat": 1, "do": [1, 6, 51], "replac": [1, 51, 53], "durat": [1, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 53, 58], "number": [1, 2, 9, 10, 14, 15, 19, 22, 24, 34, 39, 50, 51, 58], "parallel": 1, "job": [1, 51], "sequenti": 1, "process": [1, 26, 53], "processor": 1, "machin": [1, 53], "multipli": [1, 53], "5": [1, 2, 6, 8, 11, 12, 13, 19, 24, 30, 33, 43, 50, 53, 58], "multithread": 1, "valu": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 50, 51, 53, 54, 58], "alwai": [1, 2, 52], "instead": [1, 6, 51, 52, 53, 58], "when": [1, 6, 7, 12, 26, 30, 34, 39, 51, 53, 58], "construct": 1, "thi": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 52, 53, 57, 58], "automat": [1, 12, 26, 29, 34, 51, 52], "show": [1, 28, 43, 53, 54], "debug": 1, "messag": 1, "rais": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51], "valueerror": [1, 2, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51], "exampl": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 54, 56, 58], "import": [1, 2, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 56, 58], "audb": [1, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 58], "audiofil": [1, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 58], "db": [1, 6, 19, 20, 21, 23, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 42, 44, 45, 47, 48, 49, 53, 58], "emodb": [1, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 58], "version": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 52, 53, 54, 58], "4": [1, 2, 12, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 58], "media": [1, 19, 34, 53, 58], "wav": [1, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 58], "03a01fa": [1, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 58], "03a01nc": [1, 58], "03a01wa": [1, 58], "whitenoiseuniform": [1, 51], "numpi": [1, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53], "arrai": [1, 15, 51, 58], "read": [1, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 53, 54, 58], "0": [1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 50, 53, 54, 58], "signal_aug": [1, 53, 54, 58], "part": [1, 34, 51, 54], "get": [1, 4, 24, 29, 51, 52, 53, 58], "emot": 1, "df_augment": [1, 58], "cache_root": [1, 5, 51, 58], "cach": [1, 3, 4, 5, 51, 56, 58], "remove_root": 1, "root": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 51], "label": 1, "iloc": 1, "happi": 1, "function": [1, 13, 15, 24, 51, 53, 54], "without": [1, 41], "pd": [1, 58], "seri": [1, 58], "raw": 1, "howev": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "enabl": [1, 16, 51, 52], "first": [1, 33, 43, 51, 53], "doe": [1, 19, 51, 53, 54, 58], "fit": 1, "expect": [1, 19], "ani": [1, 2, 6, 7, 12, 13, 16, 22, 26, 50, 51, 52, 53], "runtimeerror": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51], "match": [1, 34, 43], "invalid": 1, "dictionari": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "found": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "assign": [1, 2, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "attribut": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51], "name": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 53, 58], "test": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51], "o": [1, 2, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "testobject": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "data": [1, 51, 54, 58], "data_root": 1, "modified_onli": [1, 58], "num_vari": [1, 58], "forc": 1, "conform": 1, "copi": [1, 29], "referenc": 1, "them": [1, 19, 53, 58], "store": [1, 3, 5, 51, 53, 58], "index_id": 1, "variant": 1, "original_path": 1, "identifi": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "note": [1, 29, 30], "filewis": [1, 58], "its": [1, 2, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 58], "correspond": [1, 20, 21, 28, 31, 32, 54], "start": [1, 28, 33, 34, 37, 38, 42, 43, 51, 53, 54, 58], "It": [1, 5, 36, 44, 45, 52, 54, 56, 58], "possibl": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 52, 53, 58], "shorten": 1, "path": [1, 2, 5, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 58], "directori": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 52], "should": [1, 28, 52, 53], "remov": [1, 39, 43, 51, 53], "g": [1, 2, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 52, 54, 57], "folder": [1, 4, 51, 52, 58], "than": [1, 2, 24, 26, 28, 34, 43, 51], "one": [1, 16, 34, 42, 53, 58], "counter": 1, "ad": [1, 31, 32, 34, 36, 41, 44, 45, 51, 53], "filenam": 1, "refer": [1, 2, 19, 34, 50, 53], "origin": [1, 26, 27, 34, 39, 43, 51, 53, 54, 58], "content": [1, 29], "kept": 1, "duplic": 1, "accordingli": [1, 34], "also": [1, 26, 31, 32, 52, 54, 58], "includ": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 58], "panda": [1, 50], "frame": 1, "datafram": [1, 58], "str": [1, 2, 5, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51], "default": [1, 3, 4, 5, 33, 34, 51, 58], "config": [1, 5, 51], "contain": [1, 12, 20, 21, 28, 31, 32, 34, 43, 51, 58], "rel": [1, 2, 34, 43, 50, 51, 53], "where": [1, 3, 5, 6], "begin": [1, 43, 53], "befor": [1, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51], "join": 1, "onli": [1, 3, 6, 7, 20, 21, 31, 32, 33, 34, 51, 53], "modifi": [1, 53, 56], "otherwis": [1, 2, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "combin": [1, 15, 43, 53, 54], "variat": 1, "everi": [1, 29, 52, 53, 58], "overwrit": [1, 58], "exist": 1, "borrow": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "static": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "d": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53], "kwarg": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "path_or_stream": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "yaml_str": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "list": [1, 2, 7, 8, 9, 10, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 53, 58], "hop": 1, "non": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "foo": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "def": [1, 2, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54], "__init__": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "self": [1, 2, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "bar": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51], "foo1": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "am": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "uniqu": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "893df240": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "babe": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "d796": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "cdf1": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "c436171b7a96": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "foo2": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "9303f2a5": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "bfc9": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "e5ff": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "0ffa": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "a9846e2d2190": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "foo3": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "check": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 52, 58], "wa": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51], "initi": [1, 2, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 58], "after": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53], "keep": [1, 27, 51, 58], "maximum": [1, 9, 30, 53], "length": [1, 2, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51, 53], "minimum": [1, 9, 53], "worker": 1, "audio": [1, 14, 15, 28, 29, 31, 32, 34, 39, 51, 53, 54, 56, 58], "float": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51], "_lib": 1, "tslib": 1, "timedelta": [1, 58], "posit": [1, 16, 17, 34, 37, 41, 43, 51, 53], "integ": [1, 2, 6, 11, 51], "treat": 1, "second": [1, 2, 16, 17, 18, 22, 26, 28, 29, 33, 34, 37, 38, 41, 43, 50, 53], "audinterfac": [1, 51], "util": [1, 2, 17, 18, 28, 30, 33, 34, 37, 38, 41, 43, 47, 48, 49, 50, 51], "to_timedelta": [1, 50], "expand": [1, 18], "time": [1, 12, 17, 18, 19, 26, 28, 33, 34, 37, 38, 41, 43, 50, 51, 52, 53, 54, 58], "scalar": 1, "filetyp": 1, "include_root": 1, "At": 1, "moment": [1, 20, 21, 31, 32], "scan": 1, "sub": [1, 3, 5, 34, 51, 58], "extens": 1, "absolut": [1, 26], "filenotfounderror": 1, "addit": [1, 29, 52, 53, 54], "keyword": [1, 51], "preserve_index": 1, "hash": [1, 51], "pkl": 1, "again": [1, 39, 53, 54, 58], "descript": 1, "level": [1, 23, 26, 28, 30, 35, 53, 58], "consist": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "split": [1, 51], "multiindex": [1, 58], "two": [1, 33, 34, 53, 54], "signal_index": 1, "gener": [1, 2, 14, 16, 17, 22, 27, 34, 37, 52, 53, 58], "short": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51], "flavor": [1, 51], "just": [1, 13], "truncat": [1, 51], "last": [1, 43], "eight": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "charact": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "include_vers": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "flatten": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53], "convert": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 51], "item": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "encod": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "usual": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "add": [1, 2, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 53], "written": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "target": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53], "dict": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "datetim": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "repres": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53], "save": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 58], "io": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "stream": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "string": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "print": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 58], "window": [1, 28, 51], "unit": [2, 17, 18, 22, 28, 33, 34, 37, 38, 41, 43, 50, 51, 53], "timestamp": [2, 50], "timespan": [2, 50], "format": [2, 16, 17, 18, 28, 33, 34, 37, 38, 41, 43, 50, 51, 52, 57], "support": [2, 6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51, 53, 54, 57, 58], "express": [2, 26, 50], "observ": [2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 53], "liter": [2, 17, 18, 28, 33, 34, 37, 38, 41, 43, 50], "specifi": [2, 5, 17, 18, 24, 28, 33, 34, 37, 38, 41, 43, 50, 51, 53, 58], "to_sampl": [2, 51], "sampling_r": [2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51, 53, 54, 56, 58], "8": [2, 17, 25, 34, 37, 54, 58], "1000": [2, 20, 53], "m": [2, 50, 52], "16": [2, 58], "64": 2, "32": 2, "seed": [2, 8, 9, 10, 11, 12, 13, 19, 25, 34, 36, 40, 44, 45, 51, 53, 58], "t": [2, 16, 53, 58], "floatuni": [2, 6, 34, 51, 53], "25": [2, 50, 54], "75": [2, 36, 44, 45, 53], "33": 2, "38": 2, "allow_neg": [2, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50], "must": [2, 29, 34, 50], "In": [2, 34, 50, 52, 53, 54], "other": [2, 29, 31, 32, 50, 52], "requir": [2, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50, 51, 52, 53, 57], "allow": [2, 16, 30, 34, 50, 51, 54], "neg": [2, 50, 51], "comput": [2, 26, 50, 51], "greater": [2, 26, 28, 51], "zero": [2, 18, 19, 26, 29, 34, 36, 38, 42, 43, 44, 45, 51], "171b7a96": [2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "6e2d2190": [2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "augment": [3, 5, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 53, 54, 56], "clear": 3, "delet": 3, "modul": [4, 42, 58], "defin": [5, 10, 11, 16, 29, 33, 43, 52, 56], "environ": [5, 52, 57], "variabl": 5, "auglib_cache_root": [5, 51], "mechan": 6, "fix": [6, 43, 51, 52], "reveal": [6, 7], "observed_value_1": 6, "observed_value_2": 6, "randomli": [6, 12, 19, 34, 40, 53], "rang": [6, 12, 26, 42, 43, 53, 54], "observable_valu": 6, "intuni": [6, 12, 13, 29, 51, 53], "low": [6, 10, 11, 13, 32, 42, 51], "high": [6, 10, 11, 13, 31, 51], "deriv": [6, 51], "we": [6, 39, 52, 53, 54, 58], "implement": [6, 12, 51], "our": [6, 53, 54, 58], "own": [6, 15], "instanc": [6, 29], "rewrit": 6, "abov": [6, 23, 26], "myrandom05": 6, "__call__": [6, 51], "randint": 6, "place": 6, "argument": [6, 50, 51, 53, 58], "transform": [6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 53, 54, 56, 57, 58], "pinknois": [6, 25, 51, 53, 56, 58], "intens": [6, 24, 26], "noise_with_random_gain": 6, "gain_db": [6, 19, 30, 36, 42, 44, 45, 53, 58], "30": [6, 53], "10": [6, 15, 20, 21, 23, 25, 27, 31, 32, 34, 35, 36, 39, 40, 42, 44, 45, 50, 53, 58], "gain": [6, 19, 26, 30, 33, 34, 36, 42, 44, 45, 47, 49], "process_fil": [6, 58], "next": [7, 8, 9, 10, 11, 12, 53, 58], "prob_tru": 8, "draw": [8, 9, 10, 11, 12, 34, 51, 53], "boolean": 8, "probabl": [8, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 54], "drawn": 8, "std": [9, 53], "normal": [9, 23, 24, 35, 53, 58], "gaussian": [9, 44, 54], "distribut": [9, 10, 11, 43, 51, 53], "center": [9, 20, 21, 43, 53], "standard": [9, 44], "deviat": [9, 44], "spread": 9, "lower": [9, 54], "bound": 9, "upper": [9, 39], "round": [9, 10, 11], "2": [9, 10, 11, 17, 25, 28, 32, 33, 34, 37, 43, 49, 50, 53, 54, 58], "62": 9, "87": 9, "uniform": [10, 11, 45], "half": [10, 30, 39, 43], "open": 10, "interv": [10, 11, 26, 30, 35], "inclus": [10, 11], "exclus": 10, "42": 10, "72": 10, "3": [11, 12, 13, 15, 33, 43, 44, 47, 53, 58], "element": [12, 53, 54, 58], "shuffl": 12, "iter": 12, "over": [12, 26], "mutablesequ": 12, "order": [12, 20, 21, 31, 32, 34, 51, 58], "try": 12, "b": [12, 52], "c": [12, 51, 54], "_": [12, 17, 18, 19, 25, 27, 29, 30, 36, 37, 38, 40, 44, 45], "99": [12, 13], "x": [13, 29, 49, 52], "conveni": 13, "share": [14, 51], "among": 14, "come": 15, "8000": [15, 16, 18, 20, 21, 27, 31, 32, 38, 39, 50, 53], "ones": [15, 20, 21, 27, 28, 31, 32, 36, 39, 44, 45], "gainstag": [15, 33], "31622776": 15, "dtype": [15, 58], "float32": [15, 58], "compos": [15, 39, 53, 54, 58], "highpass": [15, 58], "cutoff": [15, 31, 32, 58], "3000": [15, 21], "clip": [15, 24, 25, 26, 30, 34, 35, 51, 53, 58], "normalizebypeak": [15, 53, 54, 58], "peak_db": [15, 35, 58], "your": [15, 52, 53, 54, 58], "python": [15, 51, 52, 53, 54, 57], "repeat": [15, 19, 33, 43], "tile": 15, "bit_rat": 16, "dtx": 16, "preserve_level": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 58], "bypass_prob": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 58], "decod": 16, "codec": [16, 53], "adapt": [16, 53], "multi": [16, 51, 53], "narrow": [16, 53], "band": [16, 20, 21, 51], "speech": [16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53], "A": [16, 28, 53], "lossi": 16, "3rd": 16, "mobil": 16, "telephoni": 16, "3gpp": 16, "26": 16, "071": 16, "et": [16, 53], "al": [16, 53], "need": [16, 24, 34, 52, 58], "bit": [16, 51], "per": [16, 53], "4750": [16, 53], "5150": 16, "5900": [16, 53], "6700": 16, "7400": [16, 53], "7950": 16, "10200": 16, "12200": 16, "closest": 16, "discontinu": 16, "transmiss": [16, 53], "squar": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 51], "bypass": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 54], "audplot": [16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "load_media": [16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 58], "augmented_sign": [16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "waveform": [16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "shape": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "chosen": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "saml": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "incompat": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "aux": [17, 22, 27, 34, 37, 51], "read_pos_aux": [17, 34, 37, 51, 53], "read_dur_aux": [17, 34, 37, 51], "auxiliari": [17, 22, 27, 34, 37], "empti": [17, 22, 27, 37, 51], "whole": [17, 23, 24, 25, 33, 34, 37, 51, 56, 58], "cough": [17, 25, 34, 37], "sneez": [17, 25, 34, 37], "kopzxumj430_40": [17, 25, 34, 37], "94": [17, 25, 34, 37], "41": [17, 25, 34, 37], "16000": [17, 25, 27, 34, 36, 37, 39, 42, 44, 45, 50, 53], "constant": [18, 38, 51], "append": [18, 25, 51], "num_speak": [19, 53], "snr_db": [19, 25, 31, 32, 34, 36, 40, 42, 44, 45, 51, 53], "babbl": 19, "nois": [19, 25, 34, 36, 42, 44, 45, 51, 54], "sever": [19, 25, 53], "speaker": [19, 53, 58], "background": [19, 53], "talk": [19, 53], "built": 19, "enough": [19, 43, 53], "some": [19, 26, 53], "decibel": [19, 23, 24, 26, 30, 34, 35, 36, 42, 44, 45, 47, 49], "ignor": [19, 34, 36, 42, 44, 45, 50], "ratio": [19, 24, 26, 34, 36, 42, 44, 45, 51, 54], "pure": [19, 36, 42, 44, 45, 51], "musan": [19, 34, 53], "librivox": [19, 53], "000": [19, 34, 53], "30372": 19, "bandwidth": [20, 21, 53], "design": [20, 21, 24, 31, 32, 58], "butter": [20, 21, 31, 32, 58], "through": [20, 21, 23, 24, 31, 32, 51], "pass": [20, 31, 32, 51, 58], "filter": [20, 21, 27, 31, 32, 51], "frequenc": [20, 21, 27, 31, 32, 36, 39, 42, 44, 45, 53], "butterworth": [20, 21, 31, 32], "2000": [20, 21, 32, 50], "inspect": [20, 21, 27, 28, 31, 32, 39], "magnitud": [20, 21, 27, 31, 32, 36, 39, 44, 45], "spectrum": [20, 21, 27, 31, 32, 36, 39, 44, 45], "audmath": [20, 21, 27, 31, 32, 36, 39, 44, 45, 51], "matplotlib": [20, 21, 27, 31, 32, 36, 39, 44, 45], "pyplot": [20, 21, 27, 31, 32, 36, 39, 44, 45], "plt": [20, 21, 27, 31, 32, 36, 39, 44, 45], "seaborn": [20, 21, 27, 31, 32, 36, 39, 44, 45], "sn": [20, 21, 27, 31, 32, 36, 39, 44, 45], "sig": [20, 21, 27, 31, 32, 39], "color": [20, 21, 27, 31, 32, 36, 39, 44, 45], "5d6370": [20, 21, 27, 31, 32, 39], "e13b41": [20, 21, 27, 31, 32, 36, 39, 44, 45], "zip": [20, 21, 27, 31, 32, 39], "f": [20, 21, 27, 29, 31, 32, 36, 39, 44, 45], "mlab": [20, 21, 27, 31, 32, 36, 39, 44, 45], "magnitude_spectrum": [20, 21, 27, 31, 32, 36, 39, 44, 45], "smooth": [20, 21, 23, 24, 26, 27, 31, 32, 36, 39, 44, 45], "convolv": [20, 21, 27, 31, 32, 36, 39, 44, 45], "14": [20, 21, 27, 31, 32, 36, 39, 44, 45, 58], "mode": [20, 21, 27, 31, 32, 36, 39, 44, 45], "plot": [20, 21, 27, 31, 32, 39], "xlim": [20, 21, 27, 31, 32, 36, 39, 44, 45], "ylim": [20, 21, 27, 31, 32, 36, 39, 44, 45], "100": [20, 21, 27, 31, 32, 39, 42, 51, 53], "45": [20, 21, 27, 31, 32, 36, 39, 44, 45], "ylabel": [20, 21, 27, 31, 32, 36, 39, 44, 45], "xlabel": [20, 21, 27, 31, 32, 36, 39, 44, 45], "legend": [20, 21, 27, 31, 32, 39], "grid": [20, 21, 27, 31, 32, 36, 39, 44, 45], "alpha": [20, 21, 27, 31, 32, 36, 39, 44, 45], "despin": [20, 21, 27, 31, 32, 36, 39, 44, 45], "tight_layout": [20, 21, 27, 31, 32, 36, 39, 44, 45], "stop": 21, "hole": 21, "num_repeat": [22, 34, 51], "repetit": [22, 34, 51, 53], "threshold": [23, 24, 26, 51, 58], "soft": [23, 24, 48, 58], "hard": [23, 24], "amplitud": [23, 24, 26, 28, 30, 34], "trigger": [23, 24, 26], "behaviour": [23, 24, 26], "warp": [23, 24], "cubic": [23, 24], "linear": [23, 24, 26, 30], "transit": [23, 24], "between": [23, 24, 33, 34, 51, 53], "flat": [23, 24, 44, 45], "region": [23, 24, 26, 33, 43], "rest": [23, 24], "certain": [24, 26, 53], "fraction": 24, "rather": 24, "receiv": 24, "specif": [24, 33, 52], "instruct": [24, 51, 56], "about": 24, "meant": 24, "relat": 24, "total": [24, 34], "intern": [24, 53], "translat": 24, "achiev": [24, 26, 53, 57], "degrad": 24, "05": [24, 58], "togeth": 25, "pink": [25, 36, 53], "clipbyratio": [25, 40, 51, 53], "02": [25, 26], "afterward": [25, 52], "threshold_db": [26, 54], "attack_tim": 26, "01": [26, 53, 58], "release_tim": 26, "knee_radius_db": 26, "makeup_db": 26, "compress": [26, 54], "dynam": 26, "attenu": [26, 53], "whose": 26, "exce": [26, 30, 43], "determin": 26, "higher": 26, "stronger": 26, "reduct": 26, "To": [26, 52, 53, 57, 58], "avoid": [26, 51], "heavi": 26, "distort": 26, "contour": [26, 53], "govern": 26, "characterist": 26, "featur": 26, "knee": 26, "around": 26, "width": [26, 53], "control": [26, 34, 54], "nonlinear": 26, "enter": 26, "kneeradius_db": 26, "henc": [26, 39], "seen": 26, "hit": 26, "main": [26, 51], "radiu": 26, "amplifi": 26, "linearli": 26, "exceed": 26, "special": 26, "makeup": 26, "wai": [26, 52, 53], "peak": [26, 30, 35, 51], "equal": [26, 28, 43, 53], "attack": 26, "releas": [26, 51], "amplif": [26, 30], "15": [26, 45, 50, 53, 58], "factor": [26, 30, 53], "keep_tail": [27, 53], "anoth": [27, 39, 53, 54], "convolut": 27, "done": 27, "fft": 27, "approach": [27, 53], "tail": 27, "extend": [27, 34, 43, 56], "cut": 27, "out": [27, 28], "telefunken": 27, "m201": 27, "microphon": 27, "micirp": 27, "dir": 27, "telefunken_m201": 27, "in_dur": 28, "out_dur": 28, "in_shap": 28, "tukei": 28, "out_shap": 28, "in_db": 28, "120": [28, 48], "out_db": 28, "gradual": 28, "increas": [28, 51], "decreas": 28, "silenc": 28, "via": 28, "figur": [28, 51, 53, 54, 58], "less": 28, "equival": 28, "7": [28, 53], "function_arg": [29, 53], "custom": [29, 54], "channel": [29, 51, 53, 58], "evalu": 29, "serializ": 29, "reli": [29, 51], "local": [29, 52], "_plus_1": 29, "sr": 29, "plus_1": 29, "callabl": 29, "lambda": 29, "shutter": 29, "block": 29, "non_block": 29, "n": 29, "while": [29, 56], "repeatedli": 29, "400": 29, "leav": 29, "800": 29, "untouch": 29, "max_peak_db": 30, "scale": 30, "adjust": [30, 53], "never": 30, "even": [30, 52], "0db": 30, "to_db": 30, "4000": [31, 42, 50, 53], "4th": 31, "whitenoisegaussian": [31, 32, 40, 51, 53], "7000": 31, "2th": 32, "start_po": [33, 43, 51, 53], "step": [33, 52, 53], "invert": 33, "With": [33, 53], "within": 33, "outsid": [33, 51], "fall": [33, 36], "insid": [33, 58], "until": [33, 43], "tupl": 33, "altern": 33, "reduc": 33, "20": [33, 42, 50, 53], "paus": 33, "gain_base_db": [34, 51], "gain_aux_db": [34, 53], "write_pos_bas": 34, "clip_mix": 34, "loop_aux": [34, 51, 53], "extend_bas": 34, "mai": 34, "both": [34, 43, 52], "calcul": [34, 43, 51, 53], "request": [34, 43, 52, 58], "overlap": [34, 51, 53], "segment": [34, 51, 58], "loop": [34, 43, 51, 53], "beyond": 34, "extra": [34, 57], "portion": 34, "discard": 34, "unless": 34, "exactli": 34, "onc": 34, "make": [34, 51, 52, 53, 58], "sens": 34, "shorter": [34, 43], "consid": [34, 52, 53], "snr": [34, 36, 42, 44, 45, 51], "free": [34, 52, 53], "sound": [34, 53], "90": 34, "9": [34, 58], "desir": [35, 53], "power": 36, "spectral": 36, "densiti": 36, "invers": 36, "proport": 36, "octav": 36, "semilogx": [36, 44, 45], "10010": [36, 44, 45], "prepend": [38, 51], "target_r": 39, "chang": [39, 41, 51, 52, 53], "assum": 39, "here": [39, 53, 54, 58], "well": 39, "stai": [39, 52], "speed": [39, 53], "up": [39, 43, 52, 53], "frst": 39, "32000": 39, "listen": [39, 56], "pool": 40, "choos": 40, "skip": 41, "beginng": 41, "freq": 42, "sine": 42, "lfo_rat": 42, "lfo_rang": 42, "basic": 42, "sawtooth": 42, "triangl": 42, "rise": 42, "ramp": 42, "fundament": 42, "oscil": 42, "1600": 42, "end_po": [43, 51], "fill": [43, 51, 53], "fill_po": [43, 51], "right": 43, "pad": [43, 51], "wherea": 43, "incom": [43, 51, 53], "long": 43, "neither": 43, "miss": [43, 51], "left": [43, 53], "few": [43, 52], "ingo": 43, "outcom": 43, "count": 43, "backward": 43, "512": 43, "strategi": 43, "three": [43, 53, 58], "side": 43, "current": 43, "stddev": 44, "white": [44, 45, 53], "x_db": 47, "7079457843841379": 47, "veri": 48, "limit": [48, 58], "6": 49, "020599913279624": 49, "highlight": 50, "influenc": 50, "3600": 50, "hour": 50, "500": 50, "1500": 50, "notabl": 51, "project": [51, 52], "document": [51, 54], "adher": 51, "semant": 51, "entri": 51, "public": 51, "maco": 51, "docstr": 51, "depend": [51, 53], "scipi": 51, "rms_db": 51, "now": [51, 58], "singl": [51, 53], "allow_nat": 51, "find": [51, 52], "audeer": [51, 52], "code": [51, 54], "switch": [51, 53], "mit": 51, "licens": 51, "appendvalu": 51, "prependvalu": 51, "sounddevic": 51, "audiobuff": 51, "set_exception_handl": 51, "correct": 51, "introduc": 51, "v0": 51, "from_arrai": 51, "fade": 51, "librari": [51, 54, 56], "api": 51, "page": [51, 52], "buffer": 51, "babblenois": [51, 53], "resampl": [51, 53, 58], "shift": [51, 54], "tone": 51, "trim": [51, 53], "kind": 51, "crop": 51, "rm": 51, "longer": 51, "larger": 51, "cycl": 51, "would": 51, "pitch": [51, 54], "pedalboard": [51, 53], "sort": 51, "ci": [51, 52], "packag": [51, 52, 53, 54], "extern": [51, 56, 58], "solut": [51, 58], "floatnorm": [51, 53], "mask": [51, 53], "how": [51, 53, 54, 58], "to_arrai": 51, "2d": 51, "hide": 51, "obj": 51, "coverag": 51, "id": 51, "deprec": 51, "intlist": 51, "floatlist": 51, "strlist": 51, "numpytransform": 51, "random_se": 51, "fromarrai": 51, "sink": 51, "plai": 51, "humanfriendli": 51, "filterdesign": 51, "toneshap": 51, "exceptionhandl": 51, "libraryexcept": 51, "libraryexceptionwarn": 51, "updat": [51, 52], "underli": [51, 54], "binari": 51, "latest": [51, 52], "except": [51, 52], "anymor": 51, "too": 51, "audata": 51, "mixdown": [51, 58], "default_cache_root": 51, "restor": 51, "progress": 51, "process_": [51, 58], "nest": 51, "clear_default_cache_root": 51, "outdat": 51, "readm": 51, "unus": 51, "as_db": 51, "previous": 51, "audiomodifi": 51, "safer": 51, "guard": 51, "against": [51, 53], "whenev": 51, "potenti": 51, "bug": 51, "member": 51, "size": [51, 53, 54, 58], "made": [51, 52], "privat": 51, "_call": 51, "helper": 51, "jupyt": 51, "sphinx": [51, 52], "mark": 51, "amrnb": [51, 53, 57], "link": [51, 52], "force_overwrit": 51, "apply_on_index": 51, "user": [51, 56], "manual": 51, "compressdynamicrang": [51, 57], "mk_dir": 51, "mkdir": 51, "improv": [51, 52], "thread": 51, "safeti": 51, "companion": 51, "bandstop": 51, "properli": 51, "publish": 51, "boolrand": 51, "copyright": 51, "year": 51, "obsolet": 51, "wheel": 51, "toc": 51, "tree": 51, "structur": 51, "read_pos_dur": 51, "handl": 51, "thrown": 51, "libsoundtouch": 51, "so": [51, 54], "resolv": 51, "typehint": 51, "clip_by_ratio": 51, "constructor": 51, "_pass": 51, "icon": 51, "advanc": 51, "from_fil": 51, "to_fil": 51, "everyon": 52, "invit": 52, "feel": 52, "pull": 52, "error": 52, "omiss": 52, "inconsist": 52, "thing": 52, "pleas": 52, "issu": 52, "pip": [52, 57], "pypi": 52, "newest": 52, "github": 52, "git": 52, "clone": 52, "http": [52, 54], "com": [52, 54], "cd": 52, "virtual": [52, 57], "virtualenv": [52, 57], "python3": [52, 57], "home": [52, 57, 58], "env": [52, 57], "bin": [52, 57], "activ": [52, 57], "r": [52, 53, 54], "txt": 52, "date": 52, "repositori": 52, "pep8": 52, "ruff": 52, "linter": 52, "formatt": 52, "common": 52, "spell": 52, "codespel": 52, "tool": 52, "pyproject": 52, "toml": 52, "execut": 52, "pre": 52, "commit": 52, "those": [52, 53, 58], "system": 52, "wide": 52, "directli": [52, 58], "lint": 52, "fixabl": 52, "restrict": 52, "html": [52, 54], "necessari": 52, "doc": [52, 54], "still": 52, "valid": 52, "linkcheck": 52, "ll": 52, "pytest": 52, "simpli": [52, 53], "changelog": 52, "rst": 52, "z": 52, "annot": 52, "tag": 52, "push": 52, "solv": 53, "task": 53, "let": [53, 54, 58], "verbos": [53, 54, 58], "800x100": [53, 54, 58], "ax": [53, 54, 58], "ipython": [53, 54, 58], "lib": [53, 54, 58], "displai": [53, 54, 58], "browser": [53, 54, 58], "learn": 53, "model": 53, "robust": 53, "room": 53, "binaur": 53, "impuls": 53, "respons": 53, "dummi": 53, "head": 53, "air": 53, "dataset": [53, 56], "Its": 53, "rir": 53, "four": 53, "distanc": 53, "load_tabl": 53, "booth": 53, "lectur": 53, "meet": 53, "offic": 53, "pick": 53, "dure": 53, "fftconvolv": 53, "don": [53, 58], "want": [53, 54, 58], "tune": 53, "particular": 53, "bunch": 53, "room_siz": [53, 54], "damp": 53, "wet_level": 53, "dry_level": 53, "board": [53, 54], "random_param": 53, "train": 53, "recommend": 53, "real": 53, "applic": 53, "fma": 53, "0097": 53, "often": 53, "like": 53, "help": [53, 54], "bandpass": 53, "easiest": 53, "similar": [53, 54], "snyder": 53, "2018": 53, "13": [53, 58], "mainli": 53, "characteris": 53, "compar": 53, "vu": 53, "2019": 53, "amr": [53, 57], "nb": [53, 57], "bitrat": 53, "take": [53, 58], "care": 53, "35": 53, "torch": [53, 54], "epoch": 53, "might": [53, 54], "audtorch": 53, "randomcrop": 53, "temporarili": 53, "direct": 53, "off": 53, "930": 53, "0003": 53, "singer": 53, "praat": 53, "parselmouth": 53, "instal": [53, 56], "extract": 53, "synthesis": 53, "pitch_shift": 53, "semiton": [53, 54], "manipul": 53, "600": 53, "pitch_tier": 53, "tier": 53, "12": 53, "xmin": 53, "xmax": 53, "sound_transpos": 53, "resynthesi": 53, "mention": 53, "averag": 53, "f0": 53, "synthes": 53, "preserv": 53, "natur": 53, "fluctuat": 53, "constant_pitch": 53, "desired_pitch": 53, "estim": 53, "to_pitch": 53, "selected_arrai": 53, "nan": 53, "nanmean": 53, "synthesi": 53, "pitchtier": 53, "spotifi": 54, "collect": 54, "fast": 54, "vst": 54, "plugin": 54, "pipelin": 54, "explan": 54, "juce": 54, "reverb": 54, "locat": 54, "master": 54, "structreverb_1_1paramet": 54, "compressor": 54, "choru": 54, "phaser": 54, "chain": 54, "pedalboard_transform": 54, "50": 54, "inspir": [54, 58], "albument": 54, "stretch": 54, "mp3": 54, "simul": 54, "qualiti": 54, "spectrogram": 54, "gpu": 54, "audiomentations_transform": 54, "p": 54, "addgaussiannois": 54, "min_amplitud": 54, "001": 54, "max_amplitud": 54, "015": 54, "timestretch": 54, "min_rat": 54, "max_rat": 54, "pitchshift": 54, "min_semiton": 54, "max_semiton": 54, "larg": 54, "varieti": 54, "effect": 54, "flanger": 54, "sox_transform": 54, "tfm": 54, "build_arrai": 54, "input_arrai": 54, "squeez": 54, "sample_rate_in": 54, "easili": 56, "download": 57, "ffmpeg": 57, "ubuntu": 57, "sudo": 57, "apt": 57, "libavcodec": 57, "sox": 57, "Or": 58, "continu": 58, "5000": 58, "y_augment": 58, "runner": 58, "d3b62a9b": 58, "dai": 58, "00": 58, "898250": 58, "0012283715": 58, "004166632": 58, "0018338258": 58, "611250": 58, "0003378813": 58, "00029246297": 58, "00043359815": 58, "877812500": 58, "8740513e": 58, "00017815993": 58, "000150": 58, "least": 58, "index_aug": 58, "work": 58, "bd491f1a": 58, "8464945703565270270": 58, "detect": 58, "categori": 58, "int64": 58, "final": 58, "twice": 58, "03a0": 58, "transcript": 58, "a01": 58, "to_yaml_": 58, "null": 58, "to_yaml": 58, "augment_from_yaml": 58, "from_yaml": 58, "2283715e": 58, "03": 58, "1666320e": 58, "8338258e": 58, "1018698e": 58, "06": 58, "3834195e": 58, "04": 58, "6675658e": 58, "new": 58, "exact": 58, "reproduc": 58, "behavior": 58, "25102925": 58, "19091994": 58, "23076645": 58, "12397234": 58, "1524953": 58, "16985644": 58, "augment_other_se": 58, "override_arg": 58, "01383871": 58, "10363713": 58, "1208222": 58, "21219611": 58, "08782648": 58, "14412442": 58}, "objects": {"": [[0, 0, 0, "-", "auglib"]], "auglib": [[1, 1, 1, "", "Augment"], [2, 1, 1, "", "Time"], [3, 4, 1, "", "clear_default_cache_root"], [4, 1, 1, "", "config"], [5, 4, 1, "", "default_cache_root"], [6, 0, 0, "-", "observe"], [14, 4, 1, "", "seed"], [15, 0, 0, "-", "transform"], [46, 0, 0, "-", "utils"]], "auglib.Augment": [[1, 2, 1, "", "__call__"], [1, 3, 1, "", "arguments"], [1, 2, 1, "", "augment"], [1, 3, 1, "", "borrowed_arguments"], [1, 3, 1, "", "channels"], [1, 2, 1, "", "from_dict"], [1, 2, 1, "", "from_yaml"], [1, 2, 1, "", "from_yaml_s"], [1, 3, 1, "", "hidden_arguments"], [1, 3, 1, "", "hop_dur"], [1, 3, 1, "", "id"], [1, 3, 1, "", "is_loaded_from_dict"], [1, 3, 1, "", "keep_nat"], [1, 3, 1, "", "max_signal_dur"], [1, 3, 1, "", "min_signal_dur"], [1, 3, 1, "", "mixdown"], [1, 3, 1, "", "multiprocessing"], [1, 3, 1, "", "num_workers"], [1, 2, 1, "", "process_file"], [1, 2, 1, "", "process_files"], [1, 2, 1, "", "process_folder"], [1, 3, 1, "", "process_func"], [1, 3, 1, "", "process_func_args"], [1, 3, 1, "", "process_func_is_mono"], [1, 2, 1, "", "process_index"], [1, 2, 1, "", "process_signal"], [1, 2, 1, "", "process_signal_from_index"], [1, 3, 1, "", "resample"], [1, 3, 1, "", "resolvers"], [1, 3, 1, "", "sampling_rate"], [1, 3, 1, "", "seed"], [1, 3, 1, "", "segment"], [1, 3, 1, "", "short_id"], [1, 2, 1, "", "to_dict"], [1, 2, 1, "", "to_yaml"], [1, 2, 1, "", "to_yaml_s"], [1, 3, 1, "", "transform"], [1, 3, 1, "", "verbose"], [1, 3, 1, "", "win_dur"]], "auglib.Time": [[2, 2, 1, "", "__call__"], [2, 3, 1, "", "arguments"], [2, 3, 1, "", "borrowed_arguments"], [2, 2, 1, "", "from_dict"], [2, 2, 1, "", "from_yaml"], [2, 2, 1, "", "from_yaml_s"], [2, 3, 1, "", "hidden_arguments"], [2, 3, 1, "", "id"], [2, 3, 1, "", "is_loaded_from_dict"], [2, 3, 1, "", "resolvers"], [2, 3, 1, "", "short_id"], [2, 2, 1, "", "to_dict"], [2, 2, 1, "", "to_yaml"], [2, 2, 1, "", "to_yaml_s"]], "auglib.config": [[4, 3, 1, "", "CACHE_ROOT"]], "auglib.observe": [[7, 1, 1, "", "Base"], [8, 1, 1, "", "Bool"], [9, 1, 1, "", "FloatNorm"], [10, 1, 1, "", "FloatUni"], [11, 1, 1, "", "IntUni"], [12, 1, 1, "", "List"], [13, 4, 1, "", "observe"]], "auglib.observe.Base": [[7, 2, 1, "", "__call__"], [7, 3, 1, "", "arguments"], [7, 3, 1, "", "borrowed_arguments"], [7, 2, 1, "", "from_dict"], [7, 2, 1, "", "from_yaml"], [7, 2, 1, "", "from_yaml_s"], [7, 3, 1, "", "hidden_arguments"], [7, 3, 1, "", "id"], [7, 3, 1, "", "is_loaded_from_dict"], [7, 3, 1, "", "resolvers"], [7, 3, 1, "", "short_id"], [7, 2, 1, "", "to_dict"], [7, 2, 1, "", "to_yaml"], [7, 2, 1, "", "to_yaml_s"]], "auglib.observe.Bool": [[8, 2, 1, "", "__call__"], [8, 3, 1, "", "arguments"], [8, 3, 1, "", "borrowed_arguments"], [8, 2, 1, "", "from_dict"], [8, 2, 1, "", "from_yaml"], [8, 2, 1, "", "from_yaml_s"], [8, 3, 1, "", "hidden_arguments"], [8, 3, 1, "", "id"], [8, 3, 1, "", "is_loaded_from_dict"], [8, 3, 1, "", "resolvers"], [8, 3, 1, "", "short_id"], [8, 2, 1, "", "to_dict"], [8, 2, 1, "", "to_yaml"], [8, 2, 1, "", "to_yaml_s"]], "auglib.observe.FloatNorm": [[9, 2, 1, "", "__call__"], [9, 3, 1, "", "arguments"], [9, 3, 1, "", "borrowed_arguments"], [9, 2, 1, "", "from_dict"], [9, 2, 1, "", "from_yaml"], [9, 2, 1, "", "from_yaml_s"], [9, 3, 1, "", "hidden_arguments"], [9, 3, 1, "", "id"], [9, 3, 1, "", "is_loaded_from_dict"], [9, 3, 1, "", "resolvers"], [9, 3, 1, "", "short_id"], [9, 2, 1, "", "to_dict"], [9, 2, 1, "", "to_yaml"], [9, 2, 1, "", "to_yaml_s"]], "auglib.observe.FloatUni": [[10, 2, 1, "", "__call__"], [10, 3, 1, "", "arguments"], [10, 3, 1, "", "borrowed_arguments"], [10, 2, 1, "", "from_dict"], [10, 2, 1, "", "from_yaml"], [10, 2, 1, "", "from_yaml_s"], [10, 3, 1, "", "hidden_arguments"], [10, 3, 1, "", "id"], [10, 3, 1, "", "is_loaded_from_dict"], [10, 3, 1, "", "resolvers"], [10, 3, 1, "", "short_id"], [10, 2, 1, "", "to_dict"], [10, 2, 1, "", "to_yaml"], [10, 2, 1, "", "to_yaml_s"]], "auglib.observe.IntUni": [[11, 2, 1, "", "__call__"], [11, 3, 1, "", "arguments"], [11, 3, 1, "", "borrowed_arguments"], [11, 2, 1, "", "from_dict"], [11, 2, 1, "", "from_yaml"], [11, 2, 1, "", "from_yaml_s"], [11, 3, 1, "", "hidden_arguments"], [11, 3, 1, "", "id"], [11, 3, 1, "", "is_loaded_from_dict"], [11, 3, 1, "", "resolvers"], [11, 3, 1, "", "short_id"], [11, 2, 1, "", "to_dict"], [11, 2, 1, "", "to_yaml"], [11, 2, 1, "", "to_yaml_s"]], "auglib.observe.List": [[12, 2, 1, "", "__call__"], [12, 3, 1, "", "arguments"], [12, 3, 1, "", "borrowed_arguments"], [12, 2, 1, "", "from_dict"], [12, 2, 1, "", "from_yaml"], [12, 2, 1, "", "from_yaml_s"], [12, 3, 1, "", "hidden_arguments"], [12, 3, 1, "", "id"], [12, 3, 1, "", "is_loaded_from_dict"], [12, 3, 1, "", "resolvers"], [12, 3, 1, "", "short_id"], [12, 2, 1, "", "to_dict"], [12, 2, 1, "", "to_yaml"], [12, 2, 1, "", "to_yaml_s"]], "auglib.transform": [[16, 1, 1, "", "AMRNB"], [17, 1, 1, "", "Append"], [18, 1, 1, "", "AppendValue"], [19, 1, 1, "", "BabbleNoise"], [20, 1, 1, "", "BandPass"], [21, 1, 1, "", "BandStop"], [22, 1, 1, "", "Base"], [23, 1, 1, "", "Clip"], [24, 1, 1, "", "ClipByRatio"], [25, 1, 1, "", "Compose"], [26, 1, 1, "", "CompressDynamicRange"], [27, 1, 1, "", "FFTConvolve"], [28, 1, 1, "", "Fade"], [29, 1, 1, "", "Function"], [30, 1, 1, "", "GainStage"], [31, 1, 1, "", "HighPass"], [32, 1, 1, "", "LowPass"], [33, 1, 1, "", "Mask"], [34, 1, 1, "", "Mix"], [35, 1, 1, "", "NormalizeByPeak"], [36, 1, 1, "", "PinkNoise"], [37, 1, 1, "", "Prepend"], [38, 1, 1, "", "PrependValue"], [39, 1, 1, "", "Resample"], [40, 1, 1, "", "Select"], [41, 1, 1, "", "Shift"], [42, 1, 1, "", "Tone"], [43, 1, 1, "", "Trim"], [44, 1, 1, "", "WhiteNoiseGaussian"], [45, 1, 1, "", "WhiteNoiseUniform"]], "auglib.transform.AMRNB": [[16, 2, 1, "", "__call__"], [16, 3, 1, "", "arguments"], [16, 3, 1, "", "borrowed_arguments"], [16, 2, 1, "", "from_dict"], [16, 2, 1, "", "from_yaml"], [16, 2, 1, "", "from_yaml_s"], [16, 3, 1, "", "hidden_arguments"], [16, 3, 1, "", "id"], [16, 3, 1, "", "is_loaded_from_dict"], [16, 3, 1, "", "resolvers"], [16, 3, 1, "", "short_id"], [16, 2, 1, "", "to_dict"], [16, 2, 1, "", "to_samples"], [16, 2, 1, "", "to_yaml"], [16, 2, 1, "", "to_yaml_s"]], "auglib.transform.Append": [[17, 2, 1, "", "__call__"], [17, 3, 1, "", "arguments"], [17, 3, 1, "", "borrowed_arguments"], [17, 2, 1, "", "from_dict"], [17, 2, 1, "", "from_yaml"], [17, 2, 1, "", "from_yaml_s"], [17, 3, 1, "", "hidden_arguments"], [17, 3, 1, "", "id"], [17, 3, 1, "", "is_loaded_from_dict"], [17, 3, 1, "", "resolvers"], [17, 3, 1, "", "short_id"], [17, 2, 1, "", "to_dict"], [17, 2, 1, "", "to_samples"], [17, 2, 1, "", "to_yaml"], [17, 2, 1, "", "to_yaml_s"]], "auglib.transform.AppendValue": [[18, 2, 1, "", "__call__"], [18, 3, 1, "", "arguments"], [18, 3, 1, "", "borrowed_arguments"], [18, 2, 1, "", "from_dict"], [18, 2, 1, "", "from_yaml"], [18, 2, 1, "", "from_yaml_s"], [18, 3, 1, "", "hidden_arguments"], [18, 3, 1, "", "id"], [18, 3, 1, "", "is_loaded_from_dict"], [18, 3, 1, "", "resolvers"], [18, 3, 1, "", "short_id"], [18, 2, 1, "", "to_dict"], [18, 2, 1, "", "to_samples"], [18, 2, 1, "", "to_yaml"], [18, 2, 1, "", "to_yaml_s"]], "auglib.transform.BabbleNoise": [[19, 2, 1, "", "__call__"], [19, 3, 1, "", "arguments"], [19, 3, 1, "", "borrowed_arguments"], [19, 2, 1, "", "from_dict"], [19, 2, 1, "", "from_yaml"], [19, 2, 1, "", "from_yaml_s"], [19, 3, 1, "", "hidden_arguments"], [19, 3, 1, "", "id"], [19, 3, 1, "", "is_loaded_from_dict"], [19, 3, 1, "", "resolvers"], [19, 3, 1, "", "short_id"], [19, 2, 1, "", "to_dict"], [19, 2, 1, "", "to_samples"], [19, 2, 1, "", "to_yaml"], [19, 2, 1, "", "to_yaml_s"]], "auglib.transform.BandPass": [[20, 2, 1, "", "__call__"], [20, 3, 1, "", "arguments"], [20, 3, 1, "", "borrowed_arguments"], [20, 2, 1, "", "from_dict"], [20, 2, 1, "", "from_yaml"], [20, 2, 1, "", "from_yaml_s"], [20, 3, 1, "", "hidden_arguments"], [20, 3, 1, "", "id"], [20, 3, 1, "", "is_loaded_from_dict"], [20, 3, 1, "", "resolvers"], [20, 3, 1, "", "short_id"], [20, 2, 1, "", "to_dict"], [20, 2, 1, "", "to_samples"], [20, 2, 1, "", "to_yaml"], [20, 2, 1, "", "to_yaml_s"]], "auglib.transform.BandStop": [[21, 2, 1, "", "__call__"], [21, 3, 1, "", "arguments"], [21, 3, 1, "", "borrowed_arguments"], [21, 2, 1, "", "from_dict"], [21, 2, 1, "", "from_yaml"], [21, 2, 1, "", "from_yaml_s"], [21, 3, 1, "", "hidden_arguments"], [21, 3, 1, "", "id"], [21, 3, 1, "", "is_loaded_from_dict"], [21, 3, 1, "", "resolvers"], [21, 3, 1, "", "short_id"], [21, 2, 1, "", "to_dict"], [21, 2, 1, "", "to_samples"], [21, 2, 1, "", "to_yaml"], [21, 2, 1, "", "to_yaml_s"]], "auglib.transform.Base": [[22, 2, 1, "", "__call__"], [22, 3, 1, "", "arguments"], [22, 3, 1, "", "borrowed_arguments"], [22, 2, 1, "", "from_dict"], [22, 2, 1, "", "from_yaml"], [22, 2, 1, "", "from_yaml_s"], [22, 3, 1, "", "hidden_arguments"], [22, 3, 1, "", "id"], [22, 3, 1, "", "is_loaded_from_dict"], [22, 3, 1, "", "resolvers"], [22, 3, 1, "", "short_id"], [22, 2, 1, "", "to_dict"], [22, 2, 1, "", "to_samples"], [22, 2, 1, "", "to_yaml"], [22, 2, 1, "", "to_yaml_s"]], "auglib.transform.Clip": [[23, 2, 1, "", "__call__"], [23, 3, 1, "", "arguments"], [23, 3, 1, "", "borrowed_arguments"], [23, 2, 1, "", "from_dict"], [23, 2, 1, "", "from_yaml"], [23, 2, 1, "", "from_yaml_s"], [23, 3, 1, "", "hidden_arguments"], [23, 3, 1, "", "id"], [23, 3, 1, "", "is_loaded_from_dict"], [23, 3, 1, "", "resolvers"], [23, 3, 1, "", "short_id"], [23, 2, 1, "", "to_dict"], [23, 2, 1, "", "to_samples"], [23, 2, 1, "", "to_yaml"], [23, 2, 1, "", "to_yaml_s"]], "auglib.transform.ClipByRatio": [[24, 2, 1, "", "__call__"], [24, 3, 1, "", "arguments"], [24, 3, 1, "", "borrowed_arguments"], [24, 2, 1, "", "from_dict"], [24, 2, 1, "", "from_yaml"], [24, 2, 1, "", "from_yaml_s"], [24, 3, 1, "", "hidden_arguments"], [24, 3, 1, "", "id"], [24, 3, 1, "", "is_loaded_from_dict"], [24, 3, 1, "", "resolvers"], [24, 3, 1, "", "short_id"], [24, 2, 1, "", "to_dict"], [24, 2, 1, "", "to_samples"], [24, 2, 1, "", "to_yaml"], [24, 2, 1, "", "to_yaml_s"]], "auglib.transform.Compose": [[25, 2, 1, "", "__call__"], [25, 3, 1, "", "arguments"], [25, 3, 1, "", "borrowed_arguments"], [25, 2, 1, "", "from_dict"], [25, 2, 1, "", "from_yaml"], [25, 2, 1, "", "from_yaml_s"], [25, 3, 1, "", "hidden_arguments"], [25, 3, 1, "", "id"], [25, 3, 1, "", "is_loaded_from_dict"], [25, 3, 1, "", "resolvers"], [25, 3, 1, "", "short_id"], [25, 2, 1, "", "to_dict"], [25, 2, 1, "", "to_samples"], [25, 2, 1, "", "to_yaml"], [25, 2, 1, "", "to_yaml_s"]], "auglib.transform.CompressDynamicRange": [[26, 2, 1, "", "__call__"], [26, 3, 1, "", "arguments"], [26, 3, 1, "", "borrowed_arguments"], [26, 2, 1, "", "from_dict"], [26, 2, 1, "", "from_yaml"], [26, 2, 1, "", "from_yaml_s"], [26, 3, 1, "", "hidden_arguments"], [26, 3, 1, "", "id"], [26, 3, 1, "", "is_loaded_from_dict"], [26, 3, 1, "", "resolvers"], [26, 3, 1, "", "short_id"], [26, 2, 1, "", "to_dict"], [26, 2, 1, "", "to_samples"], [26, 2, 1, "", "to_yaml"], [26, 2, 1, "", "to_yaml_s"]], "auglib.transform.FFTConvolve": [[27, 2, 1, "", "__call__"], [27, 3, 1, "", "arguments"], [27, 3, 1, "", "borrowed_arguments"], [27, 2, 1, "", "from_dict"], [27, 2, 1, "", "from_yaml"], [27, 2, 1, "", "from_yaml_s"], [27, 3, 1, "", "hidden_arguments"], [27, 3, 1, "", "id"], [27, 3, 1, "", "is_loaded_from_dict"], [27, 3, 1, "", "resolvers"], [27, 3, 1, "", "short_id"], [27, 2, 1, "", "to_dict"], [27, 2, 1, "", "to_samples"], [27, 2, 1, "", "to_yaml"], [27, 2, 1, "", "to_yaml_s"]], "auglib.transform.Fade": [[28, 2, 1, "", "__call__"], [28, 3, 1, "", "arguments"], [28, 3, 1, "", "borrowed_arguments"], [28, 2, 1, "", "from_dict"], [28, 2, 1, "", "from_yaml"], [28, 2, 1, "", "from_yaml_s"], [28, 3, 1, "", "hidden_arguments"], [28, 3, 1, "", "id"], [28, 3, 1, "", "is_loaded_from_dict"], [28, 3, 1, "", "resolvers"], [28, 3, 1, "", "short_id"], [28, 2, 1, "", "to_dict"], [28, 2, 1, "", "to_samples"], [28, 2, 1, "", "to_yaml"], [28, 2, 1, "", "to_yaml_s"]], "auglib.transform.Function": [[29, 2, 1, "", "__call__"], [29, 3, 1, "", "arguments"], [29, 3, 1, "", "borrowed_arguments"], [29, 2, 1, "", "from_dict"], [29, 2, 1, "", "from_yaml"], [29, 2, 1, "", "from_yaml_s"], [29, 3, 1, "", "hidden_arguments"], [29, 3, 1, "", "id"], [29, 3, 1, "", "is_loaded_from_dict"], [29, 3, 1, "", "resolvers"], [29, 3, 1, "", "short_id"], [29, 2, 1, "", "to_dict"], [29, 2, 1, "", "to_samples"], [29, 2, 1, "", "to_yaml"], [29, 2, 1, "", "to_yaml_s"]], "auglib.transform.GainStage": [[30, 2, 1, "", "__call__"], [30, 3, 1, "", "arguments"], [30, 3, 1, "", "borrowed_arguments"], [30, 2, 1, "", "from_dict"], [30, 2, 1, "", "from_yaml"], [30, 2, 1, "", "from_yaml_s"], [30, 3, 1, "", "hidden_arguments"], [30, 3, 1, "", "id"], [30, 3, 1, "", "is_loaded_from_dict"], [30, 3, 1, "", "resolvers"], [30, 3, 1, "", "short_id"], [30, 2, 1, "", "to_dict"], [30, 2, 1, "", "to_samples"], [30, 2, 1, "", "to_yaml"], [30, 2, 1, "", "to_yaml_s"]], "auglib.transform.HighPass": [[31, 2, 1, "", "__call__"], [31, 3, 1, "", "arguments"], [31, 3, 1, "", "borrowed_arguments"], [31, 2, 1, "", "from_dict"], [31, 2, 1, "", "from_yaml"], [31, 2, 1, "", "from_yaml_s"], [31, 3, 1, "", "hidden_arguments"], [31, 3, 1, "", "id"], [31, 3, 1, "", "is_loaded_from_dict"], [31, 3, 1, "", "resolvers"], [31, 3, 1, "", "short_id"], [31, 2, 1, "", "to_dict"], [31, 2, 1, "", "to_samples"], [31, 2, 1, "", "to_yaml"], [31, 2, 1, "", "to_yaml_s"]], "auglib.transform.LowPass": [[32, 2, 1, "", "__call__"], [32, 3, 1, "", "arguments"], [32, 3, 1, "", "borrowed_arguments"], [32, 2, 1, "", "from_dict"], [32, 2, 1, "", "from_yaml"], [32, 2, 1, "", "from_yaml_s"], [32, 3, 1, "", "hidden_arguments"], [32, 3, 1, "", "id"], [32, 3, 1, "", "is_loaded_from_dict"], [32, 3, 1, "", "resolvers"], [32, 3, 1, "", "short_id"], [32, 2, 1, "", "to_dict"], [32, 2, 1, "", "to_samples"], [32, 2, 1, "", "to_yaml"], [32, 2, 1, "", "to_yaml_s"]], "auglib.transform.Mask": [[33, 2, 1, "", "__call__"], [33, 3, 1, "", "arguments"], [33, 3, 1, "", "borrowed_arguments"], [33, 2, 1, "", "from_dict"], [33, 2, 1, "", "from_yaml"], [33, 2, 1, "", "from_yaml_s"], [33, 3, 1, "", "hidden_arguments"], [33, 3, 1, "", "id"], [33, 3, 1, "", "is_loaded_from_dict"], [33, 3, 1, "", "resolvers"], [33, 3, 1, "", "short_id"], [33, 2, 1, "", "to_dict"], [33, 2, 1, "", "to_samples"], [33, 2, 1, "", "to_yaml"], [33, 2, 1, "", "to_yaml_s"]], "auglib.transform.Mix": [[34, 2, 1, "", "__call__"], [34, 3, 1, "", "arguments"], [34, 3, 1, "", "borrowed_arguments"], [34, 2, 1, "", "from_dict"], [34, 2, 1, "", "from_yaml"], [34, 2, 1, "", "from_yaml_s"], [34, 3, 1, "", "hidden_arguments"], [34, 3, 1, "", "id"], [34, 3, 1, "", "is_loaded_from_dict"], [34, 3, 1, "", "resolvers"], [34, 3, 1, "", "short_id"], [34, 2, 1, "", "to_dict"], [34, 2, 1, "", "to_samples"], [34, 2, 1, "", "to_yaml"], [34, 2, 1, "", "to_yaml_s"]], "auglib.transform.NormalizeByPeak": [[35, 2, 1, "", "__call__"], [35, 3, 1, "", "arguments"], [35, 3, 1, "", "borrowed_arguments"], [35, 2, 1, "", "from_dict"], [35, 2, 1, "", "from_yaml"], [35, 2, 1, "", "from_yaml_s"], [35, 3, 1, "", "hidden_arguments"], [35, 3, 1, "", "id"], [35, 3, 1, "", "is_loaded_from_dict"], [35, 3, 1, "", "resolvers"], [35, 3, 1, "", "short_id"], [35, 2, 1, "", "to_dict"], [35, 2, 1, "", "to_samples"], [35, 2, 1, "", "to_yaml"], [35, 2, 1, "", "to_yaml_s"]], "auglib.transform.PinkNoise": [[36, 2, 1, "", "__call__"], [36, 3, 1, "", "arguments"], [36, 3, 1, "", "borrowed_arguments"], [36, 2, 1, "", "from_dict"], [36, 2, 1, "", "from_yaml"], [36, 2, 1, "", "from_yaml_s"], [36, 3, 1, "", "hidden_arguments"], [36, 3, 1, "", "id"], [36, 3, 1, "", "is_loaded_from_dict"], [36, 3, 1, "", "resolvers"], [36, 3, 1, "", "short_id"], [36, 2, 1, "", "to_dict"], [36, 2, 1, "", "to_samples"], [36, 2, 1, "", "to_yaml"], [36, 2, 1, "", "to_yaml_s"]], "auglib.transform.Prepend": [[37, 2, 1, "", "__call__"], [37, 3, 1, "", "arguments"], [37, 3, 1, "", "borrowed_arguments"], [37, 2, 1, "", "from_dict"], [37, 2, 1, "", "from_yaml"], [37, 2, 1, "", "from_yaml_s"], [37, 3, 1, "", "hidden_arguments"], [37, 3, 1, "", "id"], [37, 3, 1, "", "is_loaded_from_dict"], [37, 3, 1, "", "resolvers"], [37, 3, 1, "", "short_id"], [37, 2, 1, "", "to_dict"], [37, 2, 1, "", "to_samples"], [37, 2, 1, "", "to_yaml"], [37, 2, 1, "", "to_yaml_s"]], "auglib.transform.PrependValue": [[38, 2, 1, "", "__call__"], [38, 3, 1, "", "arguments"], [38, 3, 1, "", "borrowed_arguments"], [38, 2, 1, "", "from_dict"], [38, 2, 1, "", "from_yaml"], [38, 2, 1, "", "from_yaml_s"], [38, 3, 1, "", "hidden_arguments"], [38, 3, 1, "", "id"], [38, 3, 1, "", "is_loaded_from_dict"], [38, 3, 1, "", "resolvers"], [38, 3, 1, "", "short_id"], [38, 2, 1, "", "to_dict"], [38, 2, 1, "", "to_samples"], [38, 2, 1, "", "to_yaml"], [38, 2, 1, "", "to_yaml_s"]], "auglib.transform.Resample": [[39, 2, 1, "", "__call__"], [39, 3, 1, "", "arguments"], [39, 3, 1, "", "borrowed_arguments"], [39, 2, 1, "", "from_dict"], [39, 2, 1, "", "from_yaml"], [39, 2, 1, "", "from_yaml_s"], [39, 3, 1, "", "hidden_arguments"], [39, 3, 1, "", "id"], [39, 3, 1, "", "is_loaded_from_dict"], [39, 3, 1, "", "resolvers"], [39, 3, 1, "", "short_id"], [39, 2, 1, "", "to_dict"], [39, 2, 1, "", "to_samples"], [39, 2, 1, "", "to_yaml"], [39, 2, 1, "", "to_yaml_s"]], "auglib.transform.Select": [[40, 2, 1, "", "__call__"], [40, 3, 1, "", "arguments"], [40, 3, 1, "", "borrowed_arguments"], [40, 2, 1, "", "from_dict"], [40, 2, 1, "", "from_yaml"], [40, 2, 1, "", "from_yaml_s"], [40, 3, 1, "", "hidden_arguments"], [40, 3, 1, "", "id"], [40, 3, 1, "", "is_loaded_from_dict"], [40, 3, 1, "", "resolvers"], [40, 3, 1, "", "short_id"], [40, 2, 1, "", "to_dict"], [40, 2, 1, "", "to_samples"], [40, 2, 1, "", "to_yaml"], [40, 2, 1, "", "to_yaml_s"]], "auglib.transform.Shift": [[41, 2, 1, "", "__call__"], [41, 3, 1, "", "arguments"], [41, 3, 1, "", "borrowed_arguments"], [41, 2, 1, "", "from_dict"], [41, 2, 1, "", "from_yaml"], [41, 2, 1, "", "from_yaml_s"], [41, 3, 1, "", "hidden_arguments"], [41, 3, 1, "", "id"], [41, 3, 1, "", "is_loaded_from_dict"], [41, 3, 1, "", "resolvers"], [41, 3, 1, "", "short_id"], [41, 2, 1, "", "to_dict"], [41, 2, 1, "", "to_samples"], [41, 2, 1, "", "to_yaml"], [41, 2, 1, "", "to_yaml_s"]], "auglib.transform.Tone": [[42, 2, 1, "", "__call__"], [42, 3, 1, "", "arguments"], [42, 3, 1, "", "borrowed_arguments"], [42, 2, 1, "", "from_dict"], [42, 2, 1, "", "from_yaml"], [42, 2, 1, "", "from_yaml_s"], [42, 3, 1, "", "hidden_arguments"], [42, 3, 1, "", "id"], [42, 3, 1, "", "is_loaded_from_dict"], [42, 3, 1, "", "resolvers"], [42, 3, 1, "", "short_id"], [42, 2, 1, "", "to_dict"], [42, 2, 1, "", "to_samples"], [42, 2, 1, "", "to_yaml"], [42, 2, 1, "", "to_yaml_s"]], "auglib.transform.Trim": [[43, 2, 1, "", "__call__"], [43, 3, 1, "", "arguments"], [43, 3, 1, "", "borrowed_arguments"], [43, 2, 1, "", "from_dict"], [43, 2, 1, "", "from_yaml"], [43, 2, 1, "", "from_yaml_s"], [43, 3, 1, "", "hidden_arguments"], [43, 3, 1, "", "id"], [43, 3, 1, "", "is_loaded_from_dict"], [43, 3, 1, "", "resolvers"], [43, 3, 1, "", "short_id"], [43, 2, 1, "", "to_dict"], [43, 2, 1, "", "to_samples"], [43, 2, 1, "", "to_yaml"], [43, 2, 1, "", "to_yaml_s"]], "auglib.transform.WhiteNoiseGaussian": [[44, 2, 1, "", "__call__"], [44, 3, 1, "", "arguments"], [44, 3, 1, "", "borrowed_arguments"], [44, 2, 1, "", "from_dict"], [44, 2, 1, "", "from_yaml"], [44, 2, 1, "", "from_yaml_s"], [44, 3, 1, "", "hidden_arguments"], [44, 3, 1, "", "id"], [44, 3, 1, "", "is_loaded_from_dict"], [44, 3, 1, "", "resolvers"], [44, 3, 1, "", "short_id"], [44, 2, 1, "", "to_dict"], [44, 2, 1, "", "to_samples"], [44, 2, 1, "", "to_yaml"], [44, 2, 1, "", "to_yaml_s"]], "auglib.transform.WhiteNoiseUniform": [[45, 2, 1, "", "__call__"], [45, 3, 1, "", "arguments"], [45, 3, 1, "", "borrowed_arguments"], [45, 2, 1, "", "from_dict"], [45, 2, 1, "", "from_yaml"], [45, 2, 1, "", "from_yaml_s"], [45, 3, 1, "", "hidden_arguments"], [45, 3, 1, "", "id"], [45, 3, 1, "", "is_loaded_from_dict"], [45, 3, 1, "", "resolvers"], [45, 3, 1, "", "short_id"], [45, 2, 1, "", "to_dict"], [45, 2, 1, "", "to_samples"], [45, 2, 1, "", "to_yaml"], [45, 2, 1, "", "to_yaml_s"]], "auglib.utils": [[47, 4, 1, "", "from_db"], [48, 4, 1, "", "rms_db"], [49, 4, 1, "", "to_db"], [50, 4, 1, "", "to_samples"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"auglib": [0, 6, 15, 46, 56], "augment": [1, 58], "__call__": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "argument": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "borrowed_argu": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "channel": 1, "from_dict": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "from_yaml": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "from_yaml_": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "hidden_argu": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "hop_dur": 1, "id": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "is_loaded_from_dict": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "keep_nat": 1, "max_signal_dur": 1, "min_signal_dur": 1, "mixdown": 1, "multiprocess": 1, "num_work": 1, "process_fil": 1, "process_fold": 1, "process_func": 1, "process_func_arg": 1, "process_func_is_mono": 1, "process_index": 1, "process_sign": 1, "process_signal_from_index": 1, "resampl": [1, 39], "resolv": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "sampling_r": 1, "seed": [1, 14], "segment": 1, "short_id": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "to_dict": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "to_yaml": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "to_yaml_": [1, 2, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "transform": [1, 15], "verbos": 1, "win_dur": 1, "time": 2, "clear_default_cache_root": 3, "config": 4, "cache_root": 4, "default_cache_root": 5, "observ": [6, 13], "base": [7, 22], "bool": 8, "floatnorm": 9, "floatuni": 10, "intuni": 11, "list": 12, "amrnb": 16, "to_sampl": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 50], "append": 17, "appendvalu": 18, "babblenois": 19, "bandpass": 20, "bandstop": 21, "clip": 23, "clipbyratio": 24, "compos": 25, "compressdynamicrang": 26, "fftconvolv": 27, "fade": 28, "function": 29, "gainstag": 30, "highpass": 31, "lowpass": 32, "mask": 33, "mix": 34, "normalizebypeak": 35, "pinknois": 36, "prepend": 37, "prependvalu": 38, "select": 40, "shift": [41, 53], "tone": 42, "trim": 43, "whitenoisegaussian": 44, "whitenoiseuniform": 45, "util": 46, "from_db": 47, "rms_db": 48, "to_db": 49, "changelog": 51, "version": 51, "1": 51, "0": 51, "2024": 51, "01": 51, "26": 51, "12": 51, "2": 51, "2023": 51, "07": 51, "31": 51, "27": 51, "04": 51, "11": 51, "2022": 51, "08": 51, "10": 51, "17": 51, "13": 51, "5": 51, "06": 51, "15": 51, "4": 51, "3": 51, "21": 51, "2021": 51, "30": 51, "9": 51, "25": 51, "8": 51, "20": 51, "2020": 51, "29": 51, "7": 51, "23": 51, "09": 51, "6": 51, "16": 51, "24": 51, "14": 51, "03": 51, "02": 51, "2019": 51, "22": 51, "contribut": 52, "develop": 52, "instal": [52, 57], "code": 52, "convent": 52, "build": 52, "document": 52, "run": 52, "test": 52, "creat": 52, "new": 52, "releas": 52, "exampl": 53, "record": 53, "reverb": 53, "artifici": 53, "music": 53, "nois": 53, "fix": 53, "snr": 53, "band": 53, "pass": 53, "filter": 53, "babbl": 53, "telephon": 53, "random": 53, "crop": 53, "gate": 53, "pitch": 53, "constant": 53, "extern": 54, "solut": 54, "pedalboard": 54, "audioment": 54, "sox": 54, "index": 55, "usag": 58, "signal": 58, "file": 58, "memori": 58, "dataset": 58, "disk": 58, "serial": 58}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"auglib": [[0, "module-auglib"], [56, "auglib"]], "Augment": [[1, "augment"]], "__call__()": [[1, "call"], [2, "call"], [7, "call"], [8, "call"], [9, "call"], [10, "call"], [11, "call"], [12, "call"], [16, "call"], [17, "call"], [18, "call"], [19, "call"], [20, "call"], [21, "call"], [22, "call"], [23, "call"], [24, "call"], [25, "call"], [26, "call"], [27, "call"], [28, "call"], [29, "call"], [30, "call"], [31, "call"], [32, "call"], [33, "call"], [34, "call"], [35, "call"], [36, "call"], [37, "call"], [38, "call"], [39, "call"], [40, "call"], [41, "call"], [42, "call"], [43, "call"], [44, "call"], [45, "call"]], "arguments": [[1, "arguments"], [2, "arguments"], [7, "arguments"], [8, "arguments"], [9, "arguments"], [10, "arguments"], [11, "arguments"], [12, "arguments"], [16, "arguments"], [17, "arguments"], [18, "arguments"], [19, "arguments"], [20, "arguments"], [21, "arguments"], [22, "arguments"], [23, "arguments"], [24, "arguments"], [25, "arguments"], [26, "arguments"], [27, "arguments"], [28, "arguments"], [29, "arguments"], [30, "arguments"], [31, "arguments"], [32, "arguments"], [33, "arguments"], [34, "arguments"], [35, "arguments"], [36, "arguments"], [37, "arguments"], [38, "arguments"], [39, "arguments"], [40, "arguments"], [41, "arguments"], [42, "arguments"], [43, "arguments"], [44, "arguments"], [45, "arguments"]], "augment()": [[1, "id1"]], "borrowed_arguments": [[1, "borrowed-arguments"], [2, "borrowed-arguments"], [7, "borrowed-arguments"], [8, "borrowed-arguments"], [9, "borrowed-arguments"], [10, "borrowed-arguments"], [11, "borrowed-arguments"], [12, "borrowed-arguments"], [16, "borrowed-arguments"], [17, "borrowed-arguments"], [18, "borrowed-arguments"], [19, "borrowed-arguments"], [20, "borrowed-arguments"], [21, "borrowed-arguments"], [22, "borrowed-arguments"], [23, "borrowed-arguments"], [24, "borrowed-arguments"], [25, "borrowed-arguments"], [26, "borrowed-arguments"], [27, "borrowed-arguments"], [28, "borrowed-arguments"], [29, "borrowed-arguments"], [30, "borrowed-arguments"], [31, "borrowed-arguments"], [32, "borrowed-arguments"], [33, "borrowed-arguments"], [34, "borrowed-arguments"], [35, "borrowed-arguments"], [36, "borrowed-arguments"], [37, "borrowed-arguments"], [38, "borrowed-arguments"], [39, "borrowed-arguments"], [40, "borrowed-arguments"], [41, "borrowed-arguments"], [42, "borrowed-arguments"], [43, "borrowed-arguments"], [44, "borrowed-arguments"], [45, "borrowed-arguments"]], "channels": [[1, "channels"]], "from_dict()": [[1, "from-dict"], [2, "from-dict"], [7, "from-dict"], [8, "from-dict"], [9, "from-dict"], [10, "from-dict"], [11, "from-dict"], [12, "from-dict"], [16, "from-dict"], [17, "from-dict"], [18, "from-dict"], [19, "from-dict"], [20, "from-dict"], [21, "from-dict"], [22, "from-dict"], [23, "from-dict"], [24, "from-dict"], [25, "from-dict"], [26, "from-dict"], [27, "from-dict"], [28, "from-dict"], [29, "from-dict"], [30, "from-dict"], [31, "from-dict"], [32, "from-dict"], [33, "from-dict"], [34, "from-dict"], [35, "from-dict"], [36, "from-dict"], [37, "from-dict"], [38, "from-dict"], [39, "from-dict"], [40, "from-dict"], [41, "from-dict"], [42, "from-dict"], [43, "from-dict"], [44, "from-dict"], [45, "from-dict"]], "from_yaml()": [[1, "from-yaml"], [2, "from-yaml"], [7, "from-yaml"], [8, "from-yaml"], [9, "from-yaml"], [10, "from-yaml"], [11, "from-yaml"], [12, "from-yaml"], [16, "from-yaml"], [17, "from-yaml"], [18, "from-yaml"], [19, "from-yaml"], [20, "from-yaml"], [21, "from-yaml"], [22, "from-yaml"], [23, "from-yaml"], [24, "from-yaml"], [25, "from-yaml"], [26, "from-yaml"], [27, "from-yaml"], [28, "from-yaml"], [29, "from-yaml"], [30, "from-yaml"], [31, "from-yaml"], [32, "from-yaml"], [33, "from-yaml"], [34, "from-yaml"], [35, "from-yaml"], [36, "from-yaml"], [37, "from-yaml"], [38, "from-yaml"], [39, "from-yaml"], [40, "from-yaml"], [41, "from-yaml"], [42, "from-yaml"], [43, "from-yaml"], [44, "from-yaml"], [45, "from-yaml"]], "from_yaml_s()": [[1, "from-yaml-s"], [2, "from-yaml-s"], [7, "from-yaml-s"], [8, "from-yaml-s"], [9, "from-yaml-s"], [10, "from-yaml-s"], [11, "from-yaml-s"], [12, "from-yaml-s"], [16, "from-yaml-s"], [17, "from-yaml-s"], [18, "from-yaml-s"], [19, "from-yaml-s"], [20, "from-yaml-s"], [21, "from-yaml-s"], [22, "from-yaml-s"], [23, "from-yaml-s"], [24, "from-yaml-s"], [25, "from-yaml-s"], [26, "from-yaml-s"], [27, "from-yaml-s"], [28, "from-yaml-s"], [29, "from-yaml-s"], [30, "from-yaml-s"], [31, "from-yaml-s"], [32, "from-yaml-s"], [33, "from-yaml-s"], [34, "from-yaml-s"], [35, "from-yaml-s"], [36, "from-yaml-s"], [37, "from-yaml-s"], [38, "from-yaml-s"], [39, "from-yaml-s"], [40, "from-yaml-s"], [41, "from-yaml-s"], [42, "from-yaml-s"], [43, "from-yaml-s"], [44, "from-yaml-s"], [45, "from-yaml-s"]], "hidden_arguments": [[1, "id2"], [2, "hidden-arguments"], [7, "hidden-arguments"], [8, "hidden-arguments"], [9, "hidden-arguments"], [10, "hidden-arguments"], [11, "hidden-arguments"], [12, "hidden-arguments"], [16, "hidden-arguments"], [17, "hidden-arguments"], [18, "hidden-arguments"], [19, "hidden-arguments"], [20, "hidden-arguments"], [21, "hidden-arguments"], [22, "hidden-arguments"], [23, "hidden-arguments"], [24, "hidden-arguments"], [25, "hidden-arguments"], [26, "hidden-arguments"], [27, "hidden-arguments"], [28, "hidden-arguments"], [29, "hidden-arguments"], [30, "hidden-arguments"], [31, "hidden-arguments"], [32, "hidden-arguments"], [33, "hidden-arguments"], [34, "hidden-arguments"], [35, "hidden-arguments"], [36, "hidden-arguments"], [37, "hidden-arguments"], [38, "hidden-arguments"], [39, "hidden-arguments"], [40, "hidden-arguments"], [41, "hidden-arguments"], [42, "hidden-arguments"], [43, "hidden-arguments"], [44, "hidden-arguments"], [45, "hidden-arguments"]], "hop_dur": [[1, "hop-dur"]], "id": [[1, "id"], [2, "id"], [7, "id"], [8, "id"], [9, "id"], [10, "id"], [11, "id"], [12, "id"], [16, "id"], [17, "id"], [18, "id"], [19, "id"], [20, "id"], [21, "id"], [22, "id"], [23, "id"], [24, "id"], [25, "id"], [26, "id"], [27, "id"], [28, "id"], [29, "id"], [30, "id"], [31, "id"], [32, "id"], [33, "id"], [34, "id"], [35, "id"], [36, "id"], [37, "id"], [38, "id"], [39, "id"], [40, "id"], [41, "id"], [42, "id"], [43, "id"], [44, "id"], [45, "id"]], "is_loaded_from_dict": [[1, "is-loaded-from-dict"], [2, "is-loaded-from-dict"], [7, "is-loaded-from-dict"], [8, "is-loaded-from-dict"], [9, "is-loaded-from-dict"], [10, "is-loaded-from-dict"], [11, "is-loaded-from-dict"], [12, "is-loaded-from-dict"], [16, "is-loaded-from-dict"], [17, "is-loaded-from-dict"], [18, "is-loaded-from-dict"], [19, "is-loaded-from-dict"], [20, "is-loaded-from-dict"], [21, "is-loaded-from-dict"], [22, "is-loaded-from-dict"], [23, "is-loaded-from-dict"], [24, "is-loaded-from-dict"], [25, "is-loaded-from-dict"], [26, "is-loaded-from-dict"], [27, "is-loaded-from-dict"], [28, "is-loaded-from-dict"], [29, "is-loaded-from-dict"], [30, "is-loaded-from-dict"], [31, "is-loaded-from-dict"], [32, "is-loaded-from-dict"], [33, "is-loaded-from-dict"], [34, "is-loaded-from-dict"], [35, "is-loaded-from-dict"], [36, "is-loaded-from-dict"], [37, "is-loaded-from-dict"], [38, "is-loaded-from-dict"], [39, "is-loaded-from-dict"], [40, "is-loaded-from-dict"], [41, "is-loaded-from-dict"], [42, "is-loaded-from-dict"], [43, "is-loaded-from-dict"], [44, "is-loaded-from-dict"], [45, "is-loaded-from-dict"]], "keep_nat": [[1, "keep-nat"]], "max_signal_dur": [[1, "max-signal-dur"]], "min_signal_dur": [[1, "min-signal-dur"]], "mixdown": [[1, "mixdown"]], "multiprocessing": [[1, "multiprocessing"]], "num_workers": [[1, "num-workers"]], "process_file()": [[1, "process-file"]], "process_files()": [[1, "process-files"]], "process_folder()": [[1, "process-folder"]], "process_func": [[1, "process-func"]], "process_func_args": [[1, "process-func-args"]], "process_func_is_mono": [[1, "process-func-is-mono"]], "process_index()": [[1, "process-index"]], "process_signal()": [[1, "process-signal"]], "process_signal_from_index()": [[1, "process-signal-from-index"]], "resample": [[1, "resample"]], "resolvers": [[1, "resolvers"], [2, "resolvers"], [7, "resolvers"], [8, "resolvers"], [9, "resolvers"], [10, "resolvers"], [11, "resolvers"], [12, "resolvers"], [16, "resolvers"], [17, "resolvers"], [18, "resolvers"], [19, "resolvers"], [20, "resolvers"], [21, "resolvers"], [22, "resolvers"], [23, "resolvers"], [24, "resolvers"], [25, "resolvers"], [26, "resolvers"], [27, "resolvers"], [28, "resolvers"], [29, "resolvers"], [30, "resolvers"], [31, "resolvers"], [32, "resolvers"], [33, "resolvers"], [34, "resolvers"], [35, "resolvers"], [36, "resolvers"], [37, "resolvers"], [38, "resolvers"], [39, "resolvers"], [40, "resolvers"], [41, "resolvers"], [42, "resolvers"], [43, "resolvers"], [44, "resolvers"], [45, "resolvers"]], "sampling_rate": [[1, "sampling-rate"]], "seed": [[1, "seed"]], "segment": [[1, "segment"]], "short_id": [[1, "short-id"], [2, "short-id"], [7, "short-id"], [8, "short-id"], [9, "short-id"], [10, "short-id"], [11, "short-id"], [12, "short-id"], [16, "short-id"], [17, "short-id"], [18, "short-id"], [19, "short-id"], [20, "short-id"], [21, "short-id"], [22, "short-id"], [23, "short-id"], [24, "short-id"], [25, "short-id"], [26, "short-id"], [27, "short-id"], [28, "short-id"], [29, "short-id"], [30, "short-id"], [31, "short-id"], [32, "short-id"], [33, "short-id"], [34, "short-id"], [35, "short-id"], [36, "short-id"], [37, "short-id"], [38, "short-id"], [39, "short-id"], [40, "short-id"], [41, "short-id"], [42, "short-id"], [43, "short-id"], [44, "short-id"], [45, "short-id"]], "to_dict()": [[1, "to-dict"], [2, "to-dict"], [7, "to-dict"], [8, "to-dict"], [9, "to-dict"], [10, "to-dict"], [11, "to-dict"], [12, "to-dict"], [16, "to-dict"], [17, "to-dict"], [18, "to-dict"], [19, "to-dict"], [20, "to-dict"], [21, "to-dict"], [22, "to-dict"], [23, "to-dict"], [24, "to-dict"], [25, "to-dict"], [26, "to-dict"], [27, "to-dict"], [28, "to-dict"], [29, "to-dict"], [30, "to-dict"], [31, "to-dict"], [32, "to-dict"], [33, "to-dict"], [34, "to-dict"], [35, "to-dict"], [36, "to-dict"], [37, "to-dict"], [38, "to-dict"], [39, "to-dict"], [40, "to-dict"], [41, "to-dict"], [42, "to-dict"], [43, "to-dict"], [44, "to-dict"], [45, "to-dict"]], "to_yaml()": [[1, "to-yaml"], [2, "to-yaml"], [7, "to-yaml"], [8, "to-yaml"], [9, "to-yaml"], [10, "to-yaml"], [11, "to-yaml"], [12, "to-yaml"], [16, "to-yaml"], [17, "to-yaml"], [18, "to-yaml"], [19, "to-yaml"], [20, "to-yaml"], [21, "to-yaml"], [22, "to-yaml"], [23, "to-yaml"], [24, "to-yaml"], [25, "to-yaml"], [26, "to-yaml"], [27, "to-yaml"], [28, "to-yaml"], [29, "to-yaml"], [30, "to-yaml"], [31, "to-yaml"], [32, "to-yaml"], [33, "to-yaml"], [34, "to-yaml"], [35, "to-yaml"], [36, "to-yaml"], [37, "to-yaml"], [38, "to-yaml"], [39, "to-yaml"], [40, "to-yaml"], [41, "to-yaml"], [42, "to-yaml"], [43, "to-yaml"], [44, "to-yaml"], [45, "to-yaml"]], "to_yaml_s()": [[1, "to-yaml-s"], [2, "to-yaml-s"], [7, "to-yaml-s"], [8, "to-yaml-s"], [9, "to-yaml-s"], [10, "to-yaml-s"], [11, "to-yaml-s"], [12, "to-yaml-s"], [16, "to-yaml-s"], [17, "to-yaml-s"], [18, "to-yaml-s"], [19, "to-yaml-s"], [20, "to-yaml-s"], [21, "to-yaml-s"], [22, "to-yaml-s"], [23, "to-yaml-s"], [24, "to-yaml-s"], [25, "to-yaml-s"], [26, "to-yaml-s"], [27, "to-yaml-s"], [28, "to-yaml-s"], [29, "to-yaml-s"], [30, "to-yaml-s"], [31, "to-yaml-s"], [32, "to-yaml-s"], [33, "to-yaml-s"], [34, "to-yaml-s"], [35, "to-yaml-s"], [36, "to-yaml-s"], [37, "to-yaml-s"], [38, "to-yaml-s"], [39, "to-yaml-s"], [40, "to-yaml-s"], [41, "to-yaml-s"], [42, "to-yaml-s"], [43, "to-yaml-s"], [44, "to-yaml-s"], [45, "to-yaml-s"]], "transform": [[1, "transform"]], "verbose": [[1, "verbose"]], "win_dur": [[1, "win-dur"]], "Time": [[2, "time"]], "clear_default_cache_root()": [[3, "clear-default-cache-root"]], "config": [[4, "config"]], "CACHE_ROOT": [[4, "cache-root"]], "default_cache_root()": [[5, "default-cache-root"]], "auglib.observe": [[6, "module-auglib.observe"]], "Base": [[7, "base"], [22, "base"]], "Bool": [[8, "bool"]], "FloatNorm": [[9, "floatnorm"]], "FloatUni": [[10, "floatuni"]], "IntUni": [[11, "intuni"]], "List": [[12, "list"]], "observe()": [[13, "observe"]], "seed()": [[14, "seed"]], "auglib.transform": [[15, "module-auglib.transform"]], "AMRNB": [[16, "amrnb"]], "to_samples()": [[16, "to-samples"], [17, "to-samples"], [18, "to-samples"], [19, "to-samples"], [20, "to-samples"], [21, "to-samples"], [22, "to-samples"], [23, "to-samples"], [24, "to-samples"], [25, "to-samples"], [26, "to-samples"], [27, "to-samples"], [28, "to-samples"], [29, "to-samples"], [30, "to-samples"], [31, "to-samples"], [32, "to-samples"], [33, "to-samples"], [34, "to-samples"], [35, "to-samples"], [36, "to-samples"], [37, "to-samples"], [38, "to-samples"], [39, "to-samples"], [40, "to-samples"], [41, "to-samples"], [42, "to-samples"], [43, "to-samples"], [44, "to-samples"], [45, "to-samples"], [50, "to-samples"]], "Append": [[17, "append"]], "AppendValue": [[18, "appendvalue"]], "BabbleNoise": [[19, "babblenoise"]], "BandPass": [[20, "bandpass"]], "BandStop": [[21, "bandstop"]], "Clip": [[23, "clip"]], "ClipByRatio": [[24, "clipbyratio"]], "Compose": [[25, "compose"]], "CompressDynamicRange": [[26, "compressdynamicrange"]], "FFTConvolve": [[27, "fftconvolve"]], "Fade": [[28, "fade"]], "Function": [[29, "function"]], "GainStage": [[30, "gainstage"]], "HighPass": [[31, "highpass"]], "LowPass": [[32, "lowpass"]], "Mask": [[33, "mask"]], "Mix": [[34, "mix"]], "NormalizeByPeak": [[35, "normalizebypeak"]], "PinkNoise": [[36, "pinknoise"]], "Prepend": [[37, "prepend"]], "PrependValue": [[38, "prependvalue"]], "Resample": [[39, "resample"]], "Select": [[40, "select"]], "Shift": [[41, "shift"]], "Tone": [[42, "tone"]], "Trim": [[43, "trim"]], "WhiteNoiseGaussian": [[44, "whitenoisegaussian"]], "WhiteNoiseUniform": [[45, "whitenoiseuniform"]], "auglib.utils": [[46, "module-auglib.utils"]], "from_db()": [[47, "from-db"]], "rms_db()": [[48, "rms-db"]], "to_db()": [[49, "to-db"]], "Changelog": [[51, "changelog"]], "Version 1.0.1 (2024-01-26)": [[51, "version-1-0-1-2024-01-26"]], "Version 1.0.0 (2024-01-26)": [[51, "version-1-0-0-2024-01-26"]], "Version 0.12.2 (2023-07-31)": [[51, "version-0-12-2-2023-07-31"]], "Version 0.12.1 (2023-07-27)": [[51, "version-0-12-1-2023-07-27"]], "Version 0.12.0 (2023-04-12)": [[51, "version-0-12-0-2023-04-12"]], "Version 0.11.2 (2022-12-08)": [[51, "version-0-11-2-2022-12-08"]], "Version 0.11.1 (2022-10-17)": [[51, "version-0-11-1-2022-10-17"]], "Version 0.11.0 (2022-10-13)": [[51, "version-0-11-0-2022-10-13"]], "Version 0.10.5 (2022-06-15)": [[51, "version-0-10-5-2022-06-15"]], "Version 0.10.4 (2022-01-26)": [[51, "version-0-10-4-2022-01-26"]], "Version 0.10.3 (2022-01-21)": [[51, "version-0-10-3-2022-01-21"]], "Version 0.10.2 (2022-01-21)": [[51, "version-0-10-2-2022-01-21"]], "Version 0.10.1 (2021-12-30)": [[51, "version-0-10-1-2021-12-30"]], "Version 0.10.0 (2021-11-17)": [[51, "version-0-10-0-2021-11-17"]], "Version 0.9.0 (2021-10-25)": [[51, "version-0-9-0-2021-10-25"]], "Version 0.8.4 (2021-08-04)": [[51, "version-0-8-4-2021-08-04"]], "Version 0.8.3 (2021-07-20)": [[51, "version-0-8-3-2021-07-20"]], "Version 0.8.2 (2020-12-04)": [[51, "version-0-8-2-2020-12-04"]], "Version 0.8.1 (2020-11-17)": [[51, "version-0-8-1-2020-11-17"]], "Version 0.8.0 (2020-10-29)": [[51, "version-0-8-0-2020-10-29"]], "Version 0.7.1 (2020-10-23)": [[51, "version-0-7-1-2020-10-23"]], "Version 0.7.0 (2020-10-09)": [[51, "version-0-7-0-2020-10-09"]], "Version 0.6.3 (2020-10-09)": [[51, "version-0-6-3-2020-10-09"]], "Version 0.6.2 (2020-10-08)": [[51, "version-0-6-2-2020-10-08"]], "Version 0.6.1 (2020-10-08)": [[51, "version-0-6-1-2020-10-08"]], "Version 0.6.0 (2020-09-29)": [[51, "version-0-6-0-2020-09-29"]], "Version 0.5.3 (2020-09-29)": [[51, "version-0-5-3-2020-09-29"]], "Version 0.5.2 (2020-08-31)": [[51, "version-0-5-2-2020-08-31"]], "Version 0.5.1 (2020-07-16)": [[51, "version-0-5-1-2020-07-16"]], "Version 0.5.0 (2020-04-24)": [[51, "version-0-5-0-2020-04-24"]], "Version 0.4.3 (2020-04-14)": [[51, "version-0-4-3-2020-04-14"]], "Version 0.4.1 (2020-04-09)": [[51, "version-0-4-1-2020-04-09"]], "Version 0.4.0 (2020-03-04)": [[51, "version-0-4-0-2020-03-04"]], "Version 0.3.8 (2020-02-27)": [[51, "version-0-3-8-2020-02-27"]], "Version 0.3.7 (2020-02-26)": [[51, "version-0-3-7-2020-02-26"]], "Version 0.3.5 (2020-02-04)": [[51, "version-0-3-5-2020-02-04"]], "Version 0.3.4 (2020-01-16)": [[51, "version-0-3-4-2020-01-16"]], "Version 0.3.3 (2020-01-15)": [[51, "version-0-3-3-2020-01-15"]], "Version 0.3.2 (2019-12-09)": [[51, "version-0-3-2-2019-12-09"]], "Version 0.3.1 (2019-12-09)": [[51, "version-0-3-1-2019-12-09"]], "Version 0.3.0 (2019-12-09)": [[51, "version-0-3-0-2019-12-09"]], "Version 0.2.3 (2019-11-22)": [[51, "version-0-2-3-2019-11-22"]], "Version 0.2.2 (2019-11-14)": [[51, "version-0-2-2-2019-11-14"]], "Version 0.2.1 (2019-11-12)": [[51, "version-0-2-1-2019-11-12"]], "Version 0.2.0 (2019-11-04)": [[51, "version-0-2-0-2019-11-04"]], "Version 0.1.5 (2019-10-11)": [[51, "version-0-1-5-2019-10-11"]], "Version 0.1.4 (2019-09-30)": [[51, "version-0-1-4-2019-09-30"]], "Version 0.1.3 (2019-09-26)": [[51, "version-0-1-3-2019-09-26"]], "Version 0.1.2 (2019-09-23)": [[51, "version-0-1-2-2019-09-23"]], "Version 0.1.1 (2019-09-23)": [[51, "version-0-1-1-2019-09-23"]], "Version 0.1.0 (2019-09-08)": [[51, "version-0-1-0-2019-09-08"]], "Contributing": [[52, "contributing"]], "Development Installation": [[52, "development-installation"]], "Coding Convention": [[52, "coding-convention"]], "Building the Documentation": [[52, "building-the-documentation"]], "Running the Tests": [[52, "running-the-tests"]], "Creating a New Release": [[52, "creating-a-new-release"]], "Examples": [[53, "examples"]], "Recorded Reverb": [[53, "recorded-reverb"]], "Artificial Reverb": [[53, "artificial-reverb"]], "Music": [[53, "music"]], "Noise with fixed SNR": [[53, "noise-with-fixed-snr"]], "Band-Pass Filtered Noise": [[53, "band-pass-filtered-noise"]], "Babble Noise": [[53, "babble-noise"]], "Telephone": [[53, "telephone"]], "Random Crop": [[53, "random-crop"]], "Gated Noise": [[53, "gated-noise"]], "Pitch Shift": [[53, "pitch-shift"]], "Constant Pitch": [[53, "constant-pitch"]], "External Solutions": [[54, "external-solutions"]], "Pedalboard": [[54, "pedalboard"]], "Audiomentations": [[54, "audiomentations"]], "Sox": [[54, "sox"]], "Index": [[55, "index"]], "Installation": [[57, "installation"]], "Usage": [[58, "usage"]], "Augment a signal": [[58, "augment-a-signal"]], "Augment files in memory": [[58, "augment-files-in-memory"]], "Augment a dataset to disk": [[58, "augment-a-dataset-to-disk"]], "Serialize": [[58, "serialize"]]}, "indexentries": {"auglib": [[0, "module-auglib"]], "module": [[0, "module-auglib"], [6, "module-auglib.observe"], [15, "module-auglib.transform"], [46, "module-auglib.utils"]], "augment (class in auglib)": [[1, "auglib.Augment"]], "__call__() (auglib.augment method)": [[1, "auglib.Augment.__call__"]], "arguments (auglib.augment attribute)": [[1, "auglib.Augment.arguments"]], "augment() (auglib.augment method)": [[1, "auglib.Augment.augment"]], "borrowed_arguments (auglib.augment attribute)": [[1, "auglib.Augment.borrowed_arguments"]], "channels (auglib.augment attribute)": [[1, "auglib.Augment.channels"]], "from_dict() (auglib.augment static method)": [[1, "auglib.Augment.from_dict"]], "from_yaml() (auglib.augment static method)": [[1, "auglib.Augment.from_yaml"]], "from_yaml_s() (auglib.augment static method)": [[1, "auglib.Augment.from_yaml_s"]], "hidden_arguments (auglib.augment attribute)": [[1, "auglib.Augment.hidden_arguments"]], "hop_dur (auglib.augment attribute)": [[1, "auglib.Augment.hop_dur"]], "id (auglib.augment attribute)": [[1, "auglib.Augment.id"]], "is_loaded_from_dict (auglib.augment attribute)": [[1, "auglib.Augment.is_loaded_from_dict"]], "keep_nat (auglib.augment attribute)": [[1, "auglib.Augment.keep_nat"]], "max_signal_dur (auglib.augment attribute)": [[1, "auglib.Augment.max_signal_dur"]], "min_signal_dur (auglib.augment attribute)": [[1, "auglib.Augment.min_signal_dur"]], "mixdown (auglib.augment attribute)": [[1, "auglib.Augment.mixdown"]], "multiprocessing (auglib.augment attribute)": [[1, "auglib.Augment.multiprocessing"]], "num_workers (auglib.augment attribute)": [[1, "auglib.Augment.num_workers"]], "process_file() (auglib.augment method)": [[1, "auglib.Augment.process_file"]], "process_files() (auglib.augment method)": [[1, "auglib.Augment.process_files"]], "process_folder() (auglib.augment method)": [[1, "auglib.Augment.process_folder"]], "process_func (auglib.augment attribute)": [[1, "auglib.Augment.process_func"]], "process_func_args (auglib.augment attribute)": [[1, "auglib.Augment.process_func_args"]], "process_func_is_mono (auglib.augment attribute)": [[1, "auglib.Augment.process_func_is_mono"]], "process_index() (auglib.augment method)": [[1, "auglib.Augment.process_index"]], "process_signal() (auglib.augment method)": [[1, "auglib.Augment.process_signal"]], "process_signal_from_index() (auglib.augment method)": [[1, "auglib.Augment.process_signal_from_index"]], "resample (auglib.augment attribute)": [[1, "auglib.Augment.resample"]], "resolvers (auglib.augment attribute)": [[1, "auglib.Augment.resolvers"]], "sampling_rate (auglib.augment attribute)": [[1, "auglib.Augment.sampling_rate"]], "seed (auglib.augment attribute)": [[1, "auglib.Augment.seed"]], "segment (auglib.augment attribute)": [[1, "auglib.Augment.segment"]], "short_id (auglib.augment attribute)": [[1, "auglib.Augment.short_id"]], "to_dict() (auglib.augment method)": [[1, "auglib.Augment.to_dict"]], "to_yaml() (auglib.augment method)": [[1, "auglib.Augment.to_yaml"]], "to_yaml_s() (auglib.augment method)": [[1, "auglib.Augment.to_yaml_s"]], "transform (auglib.augment attribute)": [[1, "auglib.Augment.transform"]], "verbose (auglib.augment attribute)": [[1, "auglib.Augment.verbose"]], "win_dur (auglib.augment attribute)": [[1, "auglib.Augment.win_dur"]], "time (class in auglib)": [[2, "auglib.Time"]], "__call__() (auglib.time method)": [[2, "auglib.Time.__call__"]], "arguments (auglib.time attribute)": [[2, "auglib.Time.arguments"]], "borrowed_arguments (auglib.time attribute)": [[2, "auglib.Time.borrowed_arguments"]], "from_dict() (auglib.time static method)": [[2, "auglib.Time.from_dict"]], "from_yaml() (auglib.time static method)": [[2, "auglib.Time.from_yaml"]], "from_yaml_s() (auglib.time static method)": [[2, "auglib.Time.from_yaml_s"]], "hidden_arguments (auglib.time attribute)": [[2, "auglib.Time.hidden_arguments"]], "id (auglib.time attribute)": [[2, "auglib.Time.id"]], "is_loaded_from_dict (auglib.time attribute)": [[2, "auglib.Time.is_loaded_from_dict"]], "resolvers (auglib.time attribute)": [[2, "auglib.Time.resolvers"]], "short_id (auglib.time attribute)": [[2, "auglib.Time.short_id"]], "to_dict() (auglib.time method)": [[2, "auglib.Time.to_dict"]], "to_yaml() (auglib.time method)": [[2, "auglib.Time.to_yaml"]], "to_yaml_s() (auglib.time method)": [[2, "auglib.Time.to_yaml_s"]], "clear_default_cache_root() (in module auglib)": [[3, "auglib.clear_default_cache_root"]], "cache_root (auglib.config attribute)": [[4, "auglib.config.CACHE_ROOT"]], "config (class in auglib)": [[4, "auglib.config"]], "default_cache_root() (in module auglib)": [[5, "auglib.default_cache_root"]], "auglib.observe": [[6, "module-auglib.observe"]], "base (class in auglib.observe)": [[7, "auglib.observe.Base"]], "__call__() (auglib.observe.base method)": [[7, "auglib.observe.Base.__call__"]], "arguments (auglib.observe.base attribute)": [[7, "auglib.observe.Base.arguments"]], "borrowed_arguments (auglib.observe.base attribute)": [[7, "auglib.observe.Base.borrowed_arguments"]], "from_dict() (auglib.observe.base static method)": [[7, "auglib.observe.Base.from_dict"]], "from_yaml() (auglib.observe.base static method)": [[7, "auglib.observe.Base.from_yaml"]], "from_yaml_s() (auglib.observe.base static method)": [[7, "auglib.observe.Base.from_yaml_s"]], "hidden_arguments (auglib.observe.base attribute)": [[7, "auglib.observe.Base.hidden_arguments"]], "id (auglib.observe.base attribute)": [[7, "auglib.observe.Base.id"]], "is_loaded_from_dict (auglib.observe.base attribute)": [[7, "auglib.observe.Base.is_loaded_from_dict"]], "resolvers (auglib.observe.base attribute)": [[7, "auglib.observe.Base.resolvers"]], "short_id (auglib.observe.base attribute)": [[7, "auglib.observe.Base.short_id"]], "to_dict() (auglib.observe.base method)": [[7, "auglib.observe.Base.to_dict"]], "to_yaml() (auglib.observe.base method)": [[7, "auglib.observe.Base.to_yaml"]], "to_yaml_s() (auglib.observe.base method)": [[7, "auglib.observe.Base.to_yaml_s"]], "bool (class in auglib.observe)": [[8, "auglib.observe.Bool"]], "__call__() (auglib.observe.bool method)": [[8, "auglib.observe.Bool.__call__"]], "arguments (auglib.observe.bool attribute)": [[8, "auglib.observe.Bool.arguments"]], "borrowed_arguments (auglib.observe.bool attribute)": [[8, "auglib.observe.Bool.borrowed_arguments"]], "from_dict() (auglib.observe.bool static method)": [[8, "auglib.observe.Bool.from_dict"]], "from_yaml() (auglib.observe.bool static method)": [[8, "auglib.observe.Bool.from_yaml"]], "from_yaml_s() (auglib.observe.bool static method)": [[8, "auglib.observe.Bool.from_yaml_s"]], "hidden_arguments (auglib.observe.bool attribute)": [[8, "auglib.observe.Bool.hidden_arguments"]], "id (auglib.observe.bool attribute)": [[8, "auglib.observe.Bool.id"]], "is_loaded_from_dict (auglib.observe.bool attribute)": [[8, "auglib.observe.Bool.is_loaded_from_dict"]], "resolvers (auglib.observe.bool attribute)": [[8, "auglib.observe.Bool.resolvers"]], "short_id (auglib.observe.bool attribute)": [[8, "auglib.observe.Bool.short_id"]], "to_dict() (auglib.observe.bool method)": [[8, "auglib.observe.Bool.to_dict"]], "to_yaml() (auglib.observe.bool method)": [[8, "auglib.observe.Bool.to_yaml"]], "to_yaml_s() (auglib.observe.bool method)": [[8, "auglib.observe.Bool.to_yaml_s"]], "floatnorm (class in auglib.observe)": [[9, "auglib.observe.FloatNorm"]], "__call__() (auglib.observe.floatnorm method)": [[9, "auglib.observe.FloatNorm.__call__"]], "arguments (auglib.observe.floatnorm attribute)": [[9, "auglib.observe.FloatNorm.arguments"]], "borrowed_arguments (auglib.observe.floatnorm attribute)": [[9, "auglib.observe.FloatNorm.borrowed_arguments"]], "from_dict() (auglib.observe.floatnorm static method)": [[9, "auglib.observe.FloatNorm.from_dict"]], "from_yaml() (auglib.observe.floatnorm static method)": [[9, "auglib.observe.FloatNorm.from_yaml"]], "from_yaml_s() (auglib.observe.floatnorm static method)": [[9, "auglib.observe.FloatNorm.from_yaml_s"]], "hidden_arguments (auglib.observe.floatnorm attribute)": [[9, "auglib.observe.FloatNorm.hidden_arguments"]], "id (auglib.observe.floatnorm attribute)": [[9, "auglib.observe.FloatNorm.id"]], "is_loaded_from_dict (auglib.observe.floatnorm attribute)": [[9, "auglib.observe.FloatNorm.is_loaded_from_dict"]], "resolvers (auglib.observe.floatnorm attribute)": [[9, "auglib.observe.FloatNorm.resolvers"]], "short_id (auglib.observe.floatnorm attribute)": [[9, "auglib.observe.FloatNorm.short_id"]], "to_dict() (auglib.observe.floatnorm method)": [[9, "auglib.observe.FloatNorm.to_dict"]], "to_yaml() (auglib.observe.floatnorm method)": [[9, "auglib.observe.FloatNorm.to_yaml"]], "to_yaml_s() (auglib.observe.floatnorm method)": [[9, "auglib.observe.FloatNorm.to_yaml_s"]], "floatuni (class in auglib.observe)": [[10, "auglib.observe.FloatUni"]], "__call__() (auglib.observe.floatuni method)": [[10, "auglib.observe.FloatUni.__call__"]], "arguments (auglib.observe.floatuni attribute)": [[10, "auglib.observe.FloatUni.arguments"]], "borrowed_arguments (auglib.observe.floatuni attribute)": [[10, "auglib.observe.FloatUni.borrowed_arguments"]], "from_dict() (auglib.observe.floatuni static method)": [[10, "auglib.observe.FloatUni.from_dict"]], "from_yaml() (auglib.observe.floatuni static method)": [[10, "auglib.observe.FloatUni.from_yaml"]], "from_yaml_s() (auglib.observe.floatuni static method)": [[10, "auglib.observe.FloatUni.from_yaml_s"]], "hidden_arguments (auglib.observe.floatuni attribute)": [[10, "auglib.observe.FloatUni.hidden_arguments"]], "id (auglib.observe.floatuni attribute)": [[10, "auglib.observe.FloatUni.id"]], "is_loaded_from_dict (auglib.observe.floatuni attribute)": [[10, "auglib.observe.FloatUni.is_loaded_from_dict"]], "resolvers (auglib.observe.floatuni attribute)": [[10, "auglib.observe.FloatUni.resolvers"]], "short_id (auglib.observe.floatuni attribute)": [[10, "auglib.observe.FloatUni.short_id"]], "to_dict() (auglib.observe.floatuni method)": [[10, "auglib.observe.FloatUni.to_dict"]], "to_yaml() (auglib.observe.floatuni method)": [[10, "auglib.observe.FloatUni.to_yaml"]], "to_yaml_s() (auglib.observe.floatuni method)": [[10, "auglib.observe.FloatUni.to_yaml_s"]], "intuni (class in auglib.observe)": [[11, "auglib.observe.IntUni"]], "__call__() (auglib.observe.intuni method)": [[11, "auglib.observe.IntUni.__call__"]], "arguments (auglib.observe.intuni attribute)": [[11, "auglib.observe.IntUni.arguments"]], "borrowed_arguments (auglib.observe.intuni attribute)": [[11, "auglib.observe.IntUni.borrowed_arguments"]], "from_dict() (auglib.observe.intuni static method)": [[11, "auglib.observe.IntUni.from_dict"]], "from_yaml() (auglib.observe.intuni static method)": [[11, "auglib.observe.IntUni.from_yaml"]], "from_yaml_s() (auglib.observe.intuni static method)": [[11, "auglib.observe.IntUni.from_yaml_s"]], "hidden_arguments (auglib.observe.intuni attribute)": [[11, "auglib.observe.IntUni.hidden_arguments"]], "id (auglib.observe.intuni attribute)": [[11, "auglib.observe.IntUni.id"]], "is_loaded_from_dict (auglib.observe.intuni attribute)": [[11, "auglib.observe.IntUni.is_loaded_from_dict"]], "resolvers (auglib.observe.intuni attribute)": [[11, "auglib.observe.IntUni.resolvers"]], "short_id (auglib.observe.intuni attribute)": [[11, "auglib.observe.IntUni.short_id"]], "to_dict() (auglib.observe.intuni method)": [[11, "auglib.observe.IntUni.to_dict"]], "to_yaml() (auglib.observe.intuni method)": [[11, "auglib.observe.IntUni.to_yaml"]], "to_yaml_s() (auglib.observe.intuni method)": [[11, "auglib.observe.IntUni.to_yaml_s"]], "list (class in auglib.observe)": [[12, "auglib.observe.List"]], "__call__() (auglib.observe.list method)": [[12, "auglib.observe.List.__call__"]], "arguments (auglib.observe.list attribute)": [[12, "auglib.observe.List.arguments"]], "borrowed_arguments (auglib.observe.list attribute)": [[12, "auglib.observe.List.borrowed_arguments"]], "from_dict() (auglib.observe.list static method)": [[12, "auglib.observe.List.from_dict"]], "from_yaml() (auglib.observe.list static method)": [[12, "auglib.observe.List.from_yaml"]], "from_yaml_s() (auglib.observe.list static method)": [[12, "auglib.observe.List.from_yaml_s"]], "hidden_arguments (auglib.observe.list attribute)": [[12, "auglib.observe.List.hidden_arguments"]], "id (auglib.observe.list attribute)": [[12, "auglib.observe.List.id"]], "is_loaded_from_dict (auglib.observe.list attribute)": [[12, "auglib.observe.List.is_loaded_from_dict"]], "resolvers (auglib.observe.list attribute)": [[12, "auglib.observe.List.resolvers"]], "short_id (auglib.observe.list attribute)": [[12, "auglib.observe.List.short_id"]], "to_dict() (auglib.observe.list method)": [[12, "auglib.observe.List.to_dict"]], "to_yaml() (auglib.observe.list method)": [[12, "auglib.observe.List.to_yaml"]], "to_yaml_s() (auglib.observe.list method)": [[12, "auglib.observe.List.to_yaml_s"]], "observe() (in module auglib.observe)": [[13, "auglib.observe.observe"]], "seed() (in module auglib)": [[14, "auglib.seed"]], "auglib.transform": [[15, "module-auglib.transform"]], "amrnb (class in auglib.transform)": [[16, "auglib.transform.AMRNB"]], "__call__() (auglib.transform.amrnb method)": [[16, "auglib.transform.AMRNB.__call__"]], "arguments (auglib.transform.amrnb attribute)": [[16, "auglib.transform.AMRNB.arguments"]], "borrowed_arguments (auglib.transform.amrnb attribute)": [[16, "auglib.transform.AMRNB.borrowed_arguments"]], "from_dict() (auglib.transform.amrnb static method)": [[16, "auglib.transform.AMRNB.from_dict"]], "from_yaml() (auglib.transform.amrnb static method)": [[16, "auglib.transform.AMRNB.from_yaml"]], "from_yaml_s() (auglib.transform.amrnb static method)": [[16, "auglib.transform.AMRNB.from_yaml_s"]], "hidden_arguments (auglib.transform.amrnb attribute)": [[16, "auglib.transform.AMRNB.hidden_arguments"]], "id (auglib.transform.amrnb attribute)": [[16, "auglib.transform.AMRNB.id"]], "is_loaded_from_dict (auglib.transform.amrnb attribute)": [[16, "auglib.transform.AMRNB.is_loaded_from_dict"]], "resolvers (auglib.transform.amrnb attribute)": [[16, "auglib.transform.AMRNB.resolvers"]], "short_id (auglib.transform.amrnb attribute)": [[16, "auglib.transform.AMRNB.short_id"]], "to_dict() (auglib.transform.amrnb method)": [[16, "auglib.transform.AMRNB.to_dict"]], "to_samples() (auglib.transform.amrnb method)": [[16, "auglib.transform.AMRNB.to_samples"]], "to_yaml() (auglib.transform.amrnb method)": [[16, "auglib.transform.AMRNB.to_yaml"]], "to_yaml_s() (auglib.transform.amrnb method)": [[16, "auglib.transform.AMRNB.to_yaml_s"]], "append (class in auglib.transform)": [[17, "auglib.transform.Append"]], "__call__() (auglib.transform.append method)": [[17, "auglib.transform.Append.__call__"]], "arguments (auglib.transform.append attribute)": [[17, "auglib.transform.Append.arguments"]], "borrowed_arguments (auglib.transform.append attribute)": [[17, "auglib.transform.Append.borrowed_arguments"]], "from_dict() (auglib.transform.append static method)": [[17, "auglib.transform.Append.from_dict"]], "from_yaml() (auglib.transform.append static method)": [[17, "auglib.transform.Append.from_yaml"]], "from_yaml_s() (auglib.transform.append static method)": [[17, "auglib.transform.Append.from_yaml_s"]], "hidden_arguments (auglib.transform.append attribute)": [[17, "auglib.transform.Append.hidden_arguments"]], "id (auglib.transform.append attribute)": [[17, "auglib.transform.Append.id"]], "is_loaded_from_dict (auglib.transform.append attribute)": [[17, "auglib.transform.Append.is_loaded_from_dict"]], "resolvers (auglib.transform.append attribute)": [[17, "auglib.transform.Append.resolvers"]], "short_id (auglib.transform.append attribute)": [[17, "auglib.transform.Append.short_id"]], "to_dict() (auglib.transform.append method)": [[17, "auglib.transform.Append.to_dict"]], "to_samples() (auglib.transform.append method)": [[17, "auglib.transform.Append.to_samples"]], "to_yaml() (auglib.transform.append method)": [[17, "auglib.transform.Append.to_yaml"]], "to_yaml_s() (auglib.transform.append method)": [[17, "auglib.transform.Append.to_yaml_s"]], "appendvalue (class in auglib.transform)": [[18, "auglib.transform.AppendValue"]], "__call__() (auglib.transform.appendvalue method)": [[18, "auglib.transform.AppendValue.__call__"]], "arguments (auglib.transform.appendvalue attribute)": [[18, "auglib.transform.AppendValue.arguments"]], "borrowed_arguments (auglib.transform.appendvalue attribute)": [[18, "auglib.transform.AppendValue.borrowed_arguments"]], "from_dict() (auglib.transform.appendvalue static method)": [[18, "auglib.transform.AppendValue.from_dict"]], "from_yaml() (auglib.transform.appendvalue static method)": [[18, "auglib.transform.AppendValue.from_yaml"]], "from_yaml_s() (auglib.transform.appendvalue static method)": [[18, "auglib.transform.AppendValue.from_yaml_s"]], "hidden_arguments (auglib.transform.appendvalue attribute)": [[18, "auglib.transform.AppendValue.hidden_arguments"]], "id (auglib.transform.appendvalue attribute)": [[18, "auglib.transform.AppendValue.id"]], "is_loaded_from_dict (auglib.transform.appendvalue attribute)": [[18, "auglib.transform.AppendValue.is_loaded_from_dict"]], "resolvers (auglib.transform.appendvalue attribute)": [[18, "auglib.transform.AppendValue.resolvers"]], "short_id (auglib.transform.appendvalue attribute)": [[18, "auglib.transform.AppendValue.short_id"]], "to_dict() (auglib.transform.appendvalue method)": [[18, "auglib.transform.AppendValue.to_dict"]], "to_samples() (auglib.transform.appendvalue method)": [[18, "auglib.transform.AppendValue.to_samples"]], "to_yaml() (auglib.transform.appendvalue method)": [[18, "auglib.transform.AppendValue.to_yaml"]], "to_yaml_s() (auglib.transform.appendvalue method)": [[18, "auglib.transform.AppendValue.to_yaml_s"]], "babblenoise (class in auglib.transform)": [[19, "auglib.transform.BabbleNoise"]], "__call__() (auglib.transform.babblenoise method)": [[19, "auglib.transform.BabbleNoise.__call__"]], "arguments (auglib.transform.babblenoise attribute)": [[19, "auglib.transform.BabbleNoise.arguments"]], "borrowed_arguments (auglib.transform.babblenoise attribute)": [[19, "auglib.transform.BabbleNoise.borrowed_arguments"]], "from_dict() (auglib.transform.babblenoise static method)": [[19, "auglib.transform.BabbleNoise.from_dict"]], "from_yaml() (auglib.transform.babblenoise static method)": [[19, "auglib.transform.BabbleNoise.from_yaml"]], "from_yaml_s() (auglib.transform.babblenoise static method)": [[19, "auglib.transform.BabbleNoise.from_yaml_s"]], "hidden_arguments (auglib.transform.babblenoise attribute)": [[19, "auglib.transform.BabbleNoise.hidden_arguments"]], "id (auglib.transform.babblenoise attribute)": [[19, "auglib.transform.BabbleNoise.id"]], "is_loaded_from_dict (auglib.transform.babblenoise attribute)": [[19, "auglib.transform.BabbleNoise.is_loaded_from_dict"]], "resolvers (auglib.transform.babblenoise attribute)": [[19, "auglib.transform.BabbleNoise.resolvers"]], "short_id (auglib.transform.babblenoise attribute)": [[19, "auglib.transform.BabbleNoise.short_id"]], "to_dict() (auglib.transform.babblenoise method)": [[19, "auglib.transform.BabbleNoise.to_dict"]], "to_samples() (auglib.transform.babblenoise method)": [[19, "auglib.transform.BabbleNoise.to_samples"]], "to_yaml() (auglib.transform.babblenoise method)": [[19, "auglib.transform.BabbleNoise.to_yaml"]], "to_yaml_s() (auglib.transform.babblenoise method)": [[19, "auglib.transform.BabbleNoise.to_yaml_s"]], "bandpass (class in auglib.transform)": [[20, "auglib.transform.BandPass"]], "__call__() (auglib.transform.bandpass method)": [[20, "auglib.transform.BandPass.__call__"]], "arguments (auglib.transform.bandpass attribute)": [[20, "auglib.transform.BandPass.arguments"]], "borrowed_arguments (auglib.transform.bandpass attribute)": [[20, "auglib.transform.BandPass.borrowed_arguments"]], "from_dict() (auglib.transform.bandpass static method)": [[20, "auglib.transform.BandPass.from_dict"]], "from_yaml() (auglib.transform.bandpass static method)": [[20, "auglib.transform.BandPass.from_yaml"]], "from_yaml_s() (auglib.transform.bandpass static method)": [[20, "auglib.transform.BandPass.from_yaml_s"]], "hidden_arguments (auglib.transform.bandpass attribute)": [[20, "auglib.transform.BandPass.hidden_arguments"]], "id (auglib.transform.bandpass attribute)": [[20, "auglib.transform.BandPass.id"]], "is_loaded_from_dict (auglib.transform.bandpass attribute)": [[20, "auglib.transform.BandPass.is_loaded_from_dict"]], "resolvers (auglib.transform.bandpass attribute)": [[20, "auglib.transform.BandPass.resolvers"]], "short_id (auglib.transform.bandpass attribute)": [[20, "auglib.transform.BandPass.short_id"]], "to_dict() (auglib.transform.bandpass method)": [[20, "auglib.transform.BandPass.to_dict"]], "to_samples() (auglib.transform.bandpass method)": [[20, "auglib.transform.BandPass.to_samples"]], "to_yaml() (auglib.transform.bandpass method)": [[20, "auglib.transform.BandPass.to_yaml"]], "to_yaml_s() (auglib.transform.bandpass method)": [[20, "auglib.transform.BandPass.to_yaml_s"]], "bandstop (class in auglib.transform)": [[21, "auglib.transform.BandStop"]], "__call__() (auglib.transform.bandstop method)": [[21, "auglib.transform.BandStop.__call__"]], "arguments (auglib.transform.bandstop attribute)": [[21, "auglib.transform.BandStop.arguments"]], "borrowed_arguments (auglib.transform.bandstop attribute)": [[21, "auglib.transform.BandStop.borrowed_arguments"]], "from_dict() (auglib.transform.bandstop static method)": [[21, "auglib.transform.BandStop.from_dict"]], "from_yaml() (auglib.transform.bandstop static method)": [[21, "auglib.transform.BandStop.from_yaml"]], "from_yaml_s() (auglib.transform.bandstop static method)": [[21, "auglib.transform.BandStop.from_yaml_s"]], "hidden_arguments (auglib.transform.bandstop attribute)": [[21, "auglib.transform.BandStop.hidden_arguments"]], "id (auglib.transform.bandstop attribute)": [[21, "auglib.transform.BandStop.id"]], "is_loaded_from_dict (auglib.transform.bandstop attribute)": [[21, "auglib.transform.BandStop.is_loaded_from_dict"]], "resolvers (auglib.transform.bandstop attribute)": [[21, "auglib.transform.BandStop.resolvers"]], "short_id (auglib.transform.bandstop attribute)": [[21, "auglib.transform.BandStop.short_id"]], "to_dict() (auglib.transform.bandstop method)": [[21, "auglib.transform.BandStop.to_dict"]], "to_samples() (auglib.transform.bandstop method)": [[21, "auglib.transform.BandStop.to_samples"]], "to_yaml() (auglib.transform.bandstop method)": [[21, "auglib.transform.BandStop.to_yaml"]], "to_yaml_s() (auglib.transform.bandstop method)": [[21, "auglib.transform.BandStop.to_yaml_s"]], "base (class in auglib.transform)": [[22, "auglib.transform.Base"]], "__call__() (auglib.transform.base method)": [[22, "auglib.transform.Base.__call__"]], "arguments (auglib.transform.base attribute)": [[22, "auglib.transform.Base.arguments"]], "borrowed_arguments (auglib.transform.base attribute)": [[22, "auglib.transform.Base.borrowed_arguments"]], "from_dict() (auglib.transform.base static method)": [[22, "auglib.transform.Base.from_dict"]], "from_yaml() (auglib.transform.base static method)": [[22, "auglib.transform.Base.from_yaml"]], "from_yaml_s() (auglib.transform.base static method)": [[22, "auglib.transform.Base.from_yaml_s"]], "hidden_arguments (auglib.transform.base attribute)": [[22, "auglib.transform.Base.hidden_arguments"]], "id (auglib.transform.base attribute)": [[22, "auglib.transform.Base.id"]], "is_loaded_from_dict (auglib.transform.base attribute)": [[22, "auglib.transform.Base.is_loaded_from_dict"]], "resolvers (auglib.transform.base attribute)": [[22, "auglib.transform.Base.resolvers"]], "short_id (auglib.transform.base attribute)": [[22, "auglib.transform.Base.short_id"]], "to_dict() (auglib.transform.base method)": [[22, "auglib.transform.Base.to_dict"]], "to_samples() (auglib.transform.base method)": [[22, "auglib.transform.Base.to_samples"]], "to_yaml() (auglib.transform.base method)": [[22, "auglib.transform.Base.to_yaml"]], "to_yaml_s() (auglib.transform.base method)": [[22, "auglib.transform.Base.to_yaml_s"]], "clip (class in auglib.transform)": [[23, "auglib.transform.Clip"]], "__call__() (auglib.transform.clip method)": [[23, "auglib.transform.Clip.__call__"]], "arguments (auglib.transform.clip attribute)": [[23, "auglib.transform.Clip.arguments"]], "borrowed_arguments (auglib.transform.clip attribute)": [[23, "auglib.transform.Clip.borrowed_arguments"]], "from_dict() (auglib.transform.clip static method)": [[23, "auglib.transform.Clip.from_dict"]], "from_yaml() (auglib.transform.clip static method)": [[23, "auglib.transform.Clip.from_yaml"]], "from_yaml_s() (auglib.transform.clip static method)": [[23, "auglib.transform.Clip.from_yaml_s"]], "hidden_arguments (auglib.transform.clip attribute)": [[23, "auglib.transform.Clip.hidden_arguments"]], "id (auglib.transform.clip attribute)": [[23, "auglib.transform.Clip.id"]], "is_loaded_from_dict (auglib.transform.clip attribute)": [[23, "auglib.transform.Clip.is_loaded_from_dict"]], "resolvers (auglib.transform.clip attribute)": [[23, "auglib.transform.Clip.resolvers"]], "short_id (auglib.transform.clip attribute)": [[23, "auglib.transform.Clip.short_id"]], "to_dict() (auglib.transform.clip method)": [[23, "auglib.transform.Clip.to_dict"]], "to_samples() (auglib.transform.clip method)": [[23, "auglib.transform.Clip.to_samples"]], "to_yaml() (auglib.transform.clip method)": [[23, "auglib.transform.Clip.to_yaml"]], "to_yaml_s() (auglib.transform.clip method)": [[23, "auglib.transform.Clip.to_yaml_s"]], "clipbyratio (class in auglib.transform)": [[24, "auglib.transform.ClipByRatio"]], "__call__() (auglib.transform.clipbyratio method)": [[24, "auglib.transform.ClipByRatio.__call__"]], "arguments (auglib.transform.clipbyratio attribute)": [[24, "auglib.transform.ClipByRatio.arguments"]], "borrowed_arguments (auglib.transform.clipbyratio attribute)": [[24, "auglib.transform.ClipByRatio.borrowed_arguments"]], "from_dict() (auglib.transform.clipbyratio static method)": [[24, "auglib.transform.ClipByRatio.from_dict"]], "from_yaml() (auglib.transform.clipbyratio static method)": [[24, "auglib.transform.ClipByRatio.from_yaml"]], "from_yaml_s() (auglib.transform.clipbyratio static method)": [[24, "auglib.transform.ClipByRatio.from_yaml_s"]], "hidden_arguments (auglib.transform.clipbyratio attribute)": [[24, "auglib.transform.ClipByRatio.hidden_arguments"]], "id (auglib.transform.clipbyratio attribute)": [[24, "auglib.transform.ClipByRatio.id"]], "is_loaded_from_dict (auglib.transform.clipbyratio attribute)": [[24, "auglib.transform.ClipByRatio.is_loaded_from_dict"]], "resolvers (auglib.transform.clipbyratio attribute)": [[24, "auglib.transform.ClipByRatio.resolvers"]], "short_id (auglib.transform.clipbyratio attribute)": [[24, "auglib.transform.ClipByRatio.short_id"]], "to_dict() (auglib.transform.clipbyratio method)": [[24, "auglib.transform.ClipByRatio.to_dict"]], "to_samples() (auglib.transform.clipbyratio method)": [[24, "auglib.transform.ClipByRatio.to_samples"]], "to_yaml() (auglib.transform.clipbyratio method)": [[24, "auglib.transform.ClipByRatio.to_yaml"]], "to_yaml_s() (auglib.transform.clipbyratio method)": [[24, "auglib.transform.ClipByRatio.to_yaml_s"]], "compose (class in auglib.transform)": [[25, "auglib.transform.Compose"]], "__call__() (auglib.transform.compose method)": [[25, "auglib.transform.Compose.__call__"]], "arguments (auglib.transform.compose attribute)": [[25, "auglib.transform.Compose.arguments"]], "borrowed_arguments (auglib.transform.compose attribute)": [[25, "auglib.transform.Compose.borrowed_arguments"]], "from_dict() (auglib.transform.compose static method)": [[25, "auglib.transform.Compose.from_dict"]], "from_yaml() (auglib.transform.compose static method)": [[25, "auglib.transform.Compose.from_yaml"]], "from_yaml_s() (auglib.transform.compose static method)": [[25, "auglib.transform.Compose.from_yaml_s"]], "hidden_arguments (auglib.transform.compose attribute)": [[25, "auglib.transform.Compose.hidden_arguments"]], "id (auglib.transform.compose attribute)": [[25, "auglib.transform.Compose.id"]], "is_loaded_from_dict (auglib.transform.compose attribute)": [[25, "auglib.transform.Compose.is_loaded_from_dict"]], "resolvers (auglib.transform.compose attribute)": [[25, "auglib.transform.Compose.resolvers"]], "short_id (auglib.transform.compose attribute)": [[25, "auglib.transform.Compose.short_id"]], "to_dict() (auglib.transform.compose method)": [[25, "auglib.transform.Compose.to_dict"]], "to_samples() (auglib.transform.compose method)": [[25, "auglib.transform.Compose.to_samples"]], "to_yaml() (auglib.transform.compose method)": [[25, "auglib.transform.Compose.to_yaml"]], "to_yaml_s() (auglib.transform.compose method)": [[25, "auglib.transform.Compose.to_yaml_s"]], "compressdynamicrange (class in auglib.transform)": [[26, "auglib.transform.CompressDynamicRange"]], "__call__() (auglib.transform.compressdynamicrange method)": [[26, "auglib.transform.CompressDynamicRange.__call__"]], "arguments (auglib.transform.compressdynamicrange attribute)": [[26, "auglib.transform.CompressDynamicRange.arguments"]], "borrowed_arguments (auglib.transform.compressdynamicrange attribute)": [[26, "auglib.transform.CompressDynamicRange.borrowed_arguments"]], "from_dict() (auglib.transform.compressdynamicrange static method)": [[26, "auglib.transform.CompressDynamicRange.from_dict"]], "from_yaml() (auglib.transform.compressdynamicrange static method)": [[26, "auglib.transform.CompressDynamicRange.from_yaml"]], "from_yaml_s() (auglib.transform.compressdynamicrange static method)": [[26, "auglib.transform.CompressDynamicRange.from_yaml_s"]], "hidden_arguments (auglib.transform.compressdynamicrange attribute)": [[26, "auglib.transform.CompressDynamicRange.hidden_arguments"]], "id (auglib.transform.compressdynamicrange attribute)": [[26, "auglib.transform.CompressDynamicRange.id"]], "is_loaded_from_dict (auglib.transform.compressdynamicrange attribute)": [[26, "auglib.transform.CompressDynamicRange.is_loaded_from_dict"]], "resolvers (auglib.transform.compressdynamicrange attribute)": [[26, "auglib.transform.CompressDynamicRange.resolvers"]], "short_id (auglib.transform.compressdynamicrange attribute)": [[26, "auglib.transform.CompressDynamicRange.short_id"]], "to_dict() (auglib.transform.compressdynamicrange method)": [[26, "auglib.transform.CompressDynamicRange.to_dict"]], "to_samples() (auglib.transform.compressdynamicrange method)": [[26, "auglib.transform.CompressDynamicRange.to_samples"]], "to_yaml() (auglib.transform.compressdynamicrange method)": [[26, "auglib.transform.CompressDynamicRange.to_yaml"]], "to_yaml_s() (auglib.transform.compressdynamicrange method)": [[26, "auglib.transform.CompressDynamicRange.to_yaml_s"]], "fftconvolve (class in auglib.transform)": [[27, "auglib.transform.FFTConvolve"]], "__call__() (auglib.transform.fftconvolve method)": [[27, "auglib.transform.FFTConvolve.__call__"]], "arguments (auglib.transform.fftconvolve attribute)": [[27, "auglib.transform.FFTConvolve.arguments"]], "borrowed_arguments (auglib.transform.fftconvolve attribute)": [[27, "auglib.transform.FFTConvolve.borrowed_arguments"]], "from_dict() (auglib.transform.fftconvolve static method)": [[27, "auglib.transform.FFTConvolve.from_dict"]], "from_yaml() (auglib.transform.fftconvolve static method)": [[27, "auglib.transform.FFTConvolve.from_yaml"]], "from_yaml_s() (auglib.transform.fftconvolve static method)": [[27, "auglib.transform.FFTConvolve.from_yaml_s"]], "hidden_arguments (auglib.transform.fftconvolve attribute)": [[27, "auglib.transform.FFTConvolve.hidden_arguments"]], "id (auglib.transform.fftconvolve attribute)": [[27, "auglib.transform.FFTConvolve.id"]], "is_loaded_from_dict (auglib.transform.fftconvolve attribute)": [[27, "auglib.transform.FFTConvolve.is_loaded_from_dict"]], "resolvers (auglib.transform.fftconvolve attribute)": [[27, "auglib.transform.FFTConvolve.resolvers"]], "short_id (auglib.transform.fftconvolve attribute)": [[27, "auglib.transform.FFTConvolve.short_id"]], "to_dict() (auglib.transform.fftconvolve method)": [[27, "auglib.transform.FFTConvolve.to_dict"]], "to_samples() (auglib.transform.fftconvolve method)": [[27, "auglib.transform.FFTConvolve.to_samples"]], "to_yaml() (auglib.transform.fftconvolve method)": [[27, "auglib.transform.FFTConvolve.to_yaml"]], "to_yaml_s() (auglib.transform.fftconvolve method)": [[27, "auglib.transform.FFTConvolve.to_yaml_s"]], "fade (class in auglib.transform)": [[28, "auglib.transform.Fade"]], "__call__() (auglib.transform.fade method)": [[28, "auglib.transform.Fade.__call__"]], "arguments (auglib.transform.fade attribute)": [[28, "auglib.transform.Fade.arguments"]], "borrowed_arguments (auglib.transform.fade attribute)": [[28, "auglib.transform.Fade.borrowed_arguments"]], "from_dict() (auglib.transform.fade static method)": [[28, "auglib.transform.Fade.from_dict"]], "from_yaml() (auglib.transform.fade static method)": [[28, "auglib.transform.Fade.from_yaml"]], "from_yaml_s() (auglib.transform.fade static method)": [[28, "auglib.transform.Fade.from_yaml_s"]], "hidden_arguments (auglib.transform.fade attribute)": [[28, "auglib.transform.Fade.hidden_arguments"]], "id (auglib.transform.fade attribute)": [[28, "auglib.transform.Fade.id"]], "is_loaded_from_dict (auglib.transform.fade attribute)": [[28, "auglib.transform.Fade.is_loaded_from_dict"]], "resolvers (auglib.transform.fade attribute)": [[28, "auglib.transform.Fade.resolvers"]], "short_id (auglib.transform.fade attribute)": [[28, "auglib.transform.Fade.short_id"]], "to_dict() (auglib.transform.fade method)": [[28, "auglib.transform.Fade.to_dict"]], "to_samples() (auglib.transform.fade method)": [[28, "auglib.transform.Fade.to_samples"]], "to_yaml() (auglib.transform.fade method)": [[28, "auglib.transform.Fade.to_yaml"]], "to_yaml_s() (auglib.transform.fade method)": [[28, "auglib.transform.Fade.to_yaml_s"]], "function (class in auglib.transform)": [[29, "auglib.transform.Function"]], "__call__() (auglib.transform.function method)": [[29, "auglib.transform.Function.__call__"]], "arguments (auglib.transform.function attribute)": [[29, "auglib.transform.Function.arguments"]], "borrowed_arguments (auglib.transform.function attribute)": [[29, "auglib.transform.Function.borrowed_arguments"]], "from_dict() (auglib.transform.function static method)": [[29, "auglib.transform.Function.from_dict"]], "from_yaml() (auglib.transform.function static method)": [[29, "auglib.transform.Function.from_yaml"]], "from_yaml_s() (auglib.transform.function static method)": [[29, "auglib.transform.Function.from_yaml_s"]], "hidden_arguments (auglib.transform.function attribute)": [[29, "auglib.transform.Function.hidden_arguments"]], "id (auglib.transform.function attribute)": [[29, "auglib.transform.Function.id"]], "is_loaded_from_dict (auglib.transform.function attribute)": [[29, "auglib.transform.Function.is_loaded_from_dict"]], "resolvers (auglib.transform.function attribute)": [[29, "auglib.transform.Function.resolvers"]], "short_id (auglib.transform.function attribute)": [[29, "auglib.transform.Function.short_id"]], "to_dict() (auglib.transform.function method)": [[29, "auglib.transform.Function.to_dict"]], "to_samples() (auglib.transform.function method)": [[29, "auglib.transform.Function.to_samples"]], "to_yaml() (auglib.transform.function method)": [[29, "auglib.transform.Function.to_yaml"]], "to_yaml_s() (auglib.transform.function method)": [[29, "auglib.transform.Function.to_yaml_s"]], "gainstage (class in auglib.transform)": [[30, "auglib.transform.GainStage"]], "__call__() (auglib.transform.gainstage method)": [[30, "auglib.transform.GainStage.__call__"]], "arguments (auglib.transform.gainstage attribute)": [[30, "auglib.transform.GainStage.arguments"]], "borrowed_arguments (auglib.transform.gainstage attribute)": [[30, "auglib.transform.GainStage.borrowed_arguments"]], "from_dict() (auglib.transform.gainstage static method)": [[30, "auglib.transform.GainStage.from_dict"]], "from_yaml() (auglib.transform.gainstage static method)": [[30, "auglib.transform.GainStage.from_yaml"]], "from_yaml_s() (auglib.transform.gainstage static method)": [[30, "auglib.transform.GainStage.from_yaml_s"]], "hidden_arguments (auglib.transform.gainstage attribute)": [[30, "auglib.transform.GainStage.hidden_arguments"]], "id (auglib.transform.gainstage attribute)": [[30, "auglib.transform.GainStage.id"]], "is_loaded_from_dict (auglib.transform.gainstage attribute)": [[30, "auglib.transform.GainStage.is_loaded_from_dict"]], "resolvers (auglib.transform.gainstage attribute)": [[30, "auglib.transform.GainStage.resolvers"]], "short_id (auglib.transform.gainstage attribute)": [[30, "auglib.transform.GainStage.short_id"]], "to_dict() (auglib.transform.gainstage method)": [[30, "auglib.transform.GainStage.to_dict"]], "to_samples() (auglib.transform.gainstage method)": [[30, "auglib.transform.GainStage.to_samples"]], "to_yaml() (auglib.transform.gainstage method)": [[30, "auglib.transform.GainStage.to_yaml"]], "to_yaml_s() (auglib.transform.gainstage method)": [[30, "auglib.transform.GainStage.to_yaml_s"]], "highpass (class in auglib.transform)": [[31, "auglib.transform.HighPass"]], "__call__() (auglib.transform.highpass method)": [[31, "auglib.transform.HighPass.__call__"]], "arguments (auglib.transform.highpass attribute)": [[31, "auglib.transform.HighPass.arguments"]], "borrowed_arguments (auglib.transform.highpass attribute)": [[31, "auglib.transform.HighPass.borrowed_arguments"]], "from_dict() (auglib.transform.highpass static method)": [[31, "auglib.transform.HighPass.from_dict"]], "from_yaml() (auglib.transform.highpass static method)": [[31, "auglib.transform.HighPass.from_yaml"]], "from_yaml_s() (auglib.transform.highpass static method)": [[31, "auglib.transform.HighPass.from_yaml_s"]], "hidden_arguments (auglib.transform.highpass attribute)": [[31, "auglib.transform.HighPass.hidden_arguments"]], "id (auglib.transform.highpass attribute)": [[31, "auglib.transform.HighPass.id"]], "is_loaded_from_dict (auglib.transform.highpass attribute)": [[31, "auglib.transform.HighPass.is_loaded_from_dict"]], "resolvers (auglib.transform.highpass attribute)": [[31, "auglib.transform.HighPass.resolvers"]], "short_id (auglib.transform.highpass attribute)": [[31, "auglib.transform.HighPass.short_id"]], "to_dict() (auglib.transform.highpass method)": [[31, "auglib.transform.HighPass.to_dict"]], "to_samples() (auglib.transform.highpass method)": [[31, "auglib.transform.HighPass.to_samples"]], "to_yaml() (auglib.transform.highpass method)": [[31, "auglib.transform.HighPass.to_yaml"]], "to_yaml_s() (auglib.transform.highpass method)": [[31, "auglib.transform.HighPass.to_yaml_s"]], "lowpass (class in auglib.transform)": [[32, "auglib.transform.LowPass"]], "__call__() (auglib.transform.lowpass method)": [[32, "auglib.transform.LowPass.__call__"]], "arguments (auglib.transform.lowpass attribute)": [[32, "auglib.transform.LowPass.arguments"]], "borrowed_arguments (auglib.transform.lowpass attribute)": [[32, "auglib.transform.LowPass.borrowed_arguments"]], "from_dict() (auglib.transform.lowpass static method)": [[32, "auglib.transform.LowPass.from_dict"]], "from_yaml() (auglib.transform.lowpass static method)": [[32, "auglib.transform.LowPass.from_yaml"]], "from_yaml_s() (auglib.transform.lowpass static method)": [[32, "auglib.transform.LowPass.from_yaml_s"]], "hidden_arguments (auglib.transform.lowpass attribute)": [[32, "auglib.transform.LowPass.hidden_arguments"]], "id (auglib.transform.lowpass attribute)": [[32, "auglib.transform.LowPass.id"]], "is_loaded_from_dict (auglib.transform.lowpass attribute)": [[32, "auglib.transform.LowPass.is_loaded_from_dict"]], "resolvers (auglib.transform.lowpass attribute)": [[32, "auglib.transform.LowPass.resolvers"]], "short_id (auglib.transform.lowpass attribute)": [[32, "auglib.transform.LowPass.short_id"]], "to_dict() (auglib.transform.lowpass method)": [[32, "auglib.transform.LowPass.to_dict"]], "to_samples() (auglib.transform.lowpass method)": [[32, "auglib.transform.LowPass.to_samples"]], "to_yaml() (auglib.transform.lowpass method)": [[32, "auglib.transform.LowPass.to_yaml"]], "to_yaml_s() (auglib.transform.lowpass method)": [[32, "auglib.transform.LowPass.to_yaml_s"]], "mask (class in auglib.transform)": [[33, "auglib.transform.Mask"]], "__call__() (auglib.transform.mask method)": [[33, "auglib.transform.Mask.__call__"]], "arguments (auglib.transform.mask attribute)": [[33, "auglib.transform.Mask.arguments"]], "borrowed_arguments (auglib.transform.mask attribute)": [[33, "auglib.transform.Mask.borrowed_arguments"]], "from_dict() (auglib.transform.mask static method)": [[33, "auglib.transform.Mask.from_dict"]], "from_yaml() (auglib.transform.mask static method)": [[33, "auglib.transform.Mask.from_yaml"]], "from_yaml_s() (auglib.transform.mask static method)": [[33, "auglib.transform.Mask.from_yaml_s"]], "hidden_arguments (auglib.transform.mask attribute)": [[33, "auglib.transform.Mask.hidden_arguments"]], "id (auglib.transform.mask attribute)": [[33, "auglib.transform.Mask.id"]], "is_loaded_from_dict (auglib.transform.mask attribute)": [[33, "auglib.transform.Mask.is_loaded_from_dict"]], "resolvers (auglib.transform.mask attribute)": [[33, "auglib.transform.Mask.resolvers"]], "short_id (auglib.transform.mask attribute)": [[33, "auglib.transform.Mask.short_id"]], "to_dict() (auglib.transform.mask method)": [[33, "auglib.transform.Mask.to_dict"]], "to_samples() (auglib.transform.mask method)": [[33, "auglib.transform.Mask.to_samples"]], "to_yaml() (auglib.transform.mask method)": [[33, "auglib.transform.Mask.to_yaml"]], "to_yaml_s() (auglib.transform.mask method)": [[33, "auglib.transform.Mask.to_yaml_s"]], "mix (class in auglib.transform)": [[34, "auglib.transform.Mix"]], "__call__() (auglib.transform.mix method)": [[34, "auglib.transform.Mix.__call__"]], "arguments (auglib.transform.mix attribute)": [[34, "auglib.transform.Mix.arguments"]], "borrowed_arguments (auglib.transform.mix attribute)": [[34, "auglib.transform.Mix.borrowed_arguments"]], "from_dict() (auglib.transform.mix static method)": [[34, "auglib.transform.Mix.from_dict"]], "from_yaml() (auglib.transform.mix static method)": [[34, "auglib.transform.Mix.from_yaml"]], "from_yaml_s() (auglib.transform.mix static method)": [[34, "auglib.transform.Mix.from_yaml_s"]], "hidden_arguments (auglib.transform.mix attribute)": [[34, "auglib.transform.Mix.hidden_arguments"]], "id (auglib.transform.mix attribute)": [[34, "auglib.transform.Mix.id"]], "is_loaded_from_dict (auglib.transform.mix attribute)": [[34, "auglib.transform.Mix.is_loaded_from_dict"]], "resolvers (auglib.transform.mix attribute)": [[34, "auglib.transform.Mix.resolvers"]], "short_id (auglib.transform.mix attribute)": [[34, "auglib.transform.Mix.short_id"]], "to_dict() (auglib.transform.mix method)": [[34, "auglib.transform.Mix.to_dict"]], "to_samples() (auglib.transform.mix method)": [[34, "auglib.transform.Mix.to_samples"]], "to_yaml() (auglib.transform.mix method)": [[34, "auglib.transform.Mix.to_yaml"]], "to_yaml_s() (auglib.transform.mix method)": [[34, "auglib.transform.Mix.to_yaml_s"]], "normalizebypeak (class in auglib.transform)": [[35, "auglib.transform.NormalizeByPeak"]], "__call__() (auglib.transform.normalizebypeak method)": [[35, "auglib.transform.NormalizeByPeak.__call__"]], "arguments (auglib.transform.normalizebypeak attribute)": [[35, "auglib.transform.NormalizeByPeak.arguments"]], "borrowed_arguments (auglib.transform.normalizebypeak attribute)": [[35, "auglib.transform.NormalizeByPeak.borrowed_arguments"]], "from_dict() (auglib.transform.normalizebypeak static method)": [[35, "auglib.transform.NormalizeByPeak.from_dict"]], "from_yaml() (auglib.transform.normalizebypeak static method)": [[35, "auglib.transform.NormalizeByPeak.from_yaml"]], "from_yaml_s() (auglib.transform.normalizebypeak static method)": [[35, "auglib.transform.NormalizeByPeak.from_yaml_s"]], "hidden_arguments (auglib.transform.normalizebypeak attribute)": [[35, "auglib.transform.NormalizeByPeak.hidden_arguments"]], "id (auglib.transform.normalizebypeak attribute)": [[35, "auglib.transform.NormalizeByPeak.id"]], "is_loaded_from_dict (auglib.transform.normalizebypeak attribute)": [[35, "auglib.transform.NormalizeByPeak.is_loaded_from_dict"]], "resolvers (auglib.transform.normalizebypeak attribute)": [[35, "auglib.transform.NormalizeByPeak.resolvers"]], "short_id (auglib.transform.normalizebypeak attribute)": [[35, "auglib.transform.NormalizeByPeak.short_id"]], "to_dict() (auglib.transform.normalizebypeak method)": [[35, "auglib.transform.NormalizeByPeak.to_dict"]], "to_samples() (auglib.transform.normalizebypeak method)": [[35, "auglib.transform.NormalizeByPeak.to_samples"]], "to_yaml() (auglib.transform.normalizebypeak method)": [[35, "auglib.transform.NormalizeByPeak.to_yaml"]], "to_yaml_s() (auglib.transform.normalizebypeak method)": [[35, "auglib.transform.NormalizeByPeak.to_yaml_s"]], "pinknoise (class in auglib.transform)": [[36, "auglib.transform.PinkNoise"]], "__call__() (auglib.transform.pinknoise method)": [[36, "auglib.transform.PinkNoise.__call__"]], "arguments (auglib.transform.pinknoise attribute)": [[36, "auglib.transform.PinkNoise.arguments"]], "borrowed_arguments (auglib.transform.pinknoise attribute)": [[36, "auglib.transform.PinkNoise.borrowed_arguments"]], "from_dict() (auglib.transform.pinknoise static method)": [[36, "auglib.transform.PinkNoise.from_dict"]], "from_yaml() (auglib.transform.pinknoise static method)": [[36, "auglib.transform.PinkNoise.from_yaml"]], "from_yaml_s() (auglib.transform.pinknoise static method)": [[36, "auglib.transform.PinkNoise.from_yaml_s"]], "hidden_arguments (auglib.transform.pinknoise attribute)": [[36, "auglib.transform.PinkNoise.hidden_arguments"]], "id (auglib.transform.pinknoise attribute)": [[36, "auglib.transform.PinkNoise.id"]], "is_loaded_from_dict (auglib.transform.pinknoise attribute)": [[36, "auglib.transform.PinkNoise.is_loaded_from_dict"]], "resolvers (auglib.transform.pinknoise attribute)": [[36, "auglib.transform.PinkNoise.resolvers"]], "short_id (auglib.transform.pinknoise attribute)": [[36, "auglib.transform.PinkNoise.short_id"]], "to_dict() (auglib.transform.pinknoise method)": [[36, "auglib.transform.PinkNoise.to_dict"]], "to_samples() (auglib.transform.pinknoise method)": [[36, "auglib.transform.PinkNoise.to_samples"]], "to_yaml() (auglib.transform.pinknoise method)": [[36, "auglib.transform.PinkNoise.to_yaml"]], "to_yaml_s() (auglib.transform.pinknoise method)": [[36, "auglib.transform.PinkNoise.to_yaml_s"]], "prepend (class in auglib.transform)": [[37, "auglib.transform.Prepend"]], "__call__() (auglib.transform.prepend method)": [[37, "auglib.transform.Prepend.__call__"]], "arguments (auglib.transform.prepend attribute)": [[37, "auglib.transform.Prepend.arguments"]], "borrowed_arguments (auglib.transform.prepend attribute)": [[37, "auglib.transform.Prepend.borrowed_arguments"]], "from_dict() (auglib.transform.prepend static method)": [[37, "auglib.transform.Prepend.from_dict"]], "from_yaml() (auglib.transform.prepend static method)": [[37, "auglib.transform.Prepend.from_yaml"]], "from_yaml_s() (auglib.transform.prepend static method)": [[37, "auglib.transform.Prepend.from_yaml_s"]], "hidden_arguments (auglib.transform.prepend attribute)": [[37, "auglib.transform.Prepend.hidden_arguments"]], "id (auglib.transform.prepend attribute)": [[37, "auglib.transform.Prepend.id"]], "is_loaded_from_dict (auglib.transform.prepend attribute)": [[37, "auglib.transform.Prepend.is_loaded_from_dict"]], "resolvers (auglib.transform.prepend attribute)": [[37, "auglib.transform.Prepend.resolvers"]], "short_id (auglib.transform.prepend attribute)": [[37, "auglib.transform.Prepend.short_id"]], "to_dict() (auglib.transform.prepend method)": [[37, "auglib.transform.Prepend.to_dict"]], "to_samples() (auglib.transform.prepend method)": [[37, "auglib.transform.Prepend.to_samples"]], "to_yaml() (auglib.transform.prepend method)": [[37, "auglib.transform.Prepend.to_yaml"]], "to_yaml_s() (auglib.transform.prepend method)": [[37, "auglib.transform.Prepend.to_yaml_s"]], "prependvalue (class in auglib.transform)": [[38, "auglib.transform.PrependValue"]], "__call__() (auglib.transform.prependvalue method)": [[38, "auglib.transform.PrependValue.__call__"]], "arguments (auglib.transform.prependvalue attribute)": [[38, "auglib.transform.PrependValue.arguments"]], "borrowed_arguments (auglib.transform.prependvalue attribute)": [[38, "auglib.transform.PrependValue.borrowed_arguments"]], "from_dict() (auglib.transform.prependvalue static method)": [[38, "auglib.transform.PrependValue.from_dict"]], "from_yaml() (auglib.transform.prependvalue static method)": [[38, "auglib.transform.PrependValue.from_yaml"]], "from_yaml_s() (auglib.transform.prependvalue static method)": [[38, "auglib.transform.PrependValue.from_yaml_s"]], "hidden_arguments (auglib.transform.prependvalue attribute)": [[38, "auglib.transform.PrependValue.hidden_arguments"]], "id (auglib.transform.prependvalue attribute)": [[38, "auglib.transform.PrependValue.id"]], "is_loaded_from_dict (auglib.transform.prependvalue attribute)": [[38, "auglib.transform.PrependValue.is_loaded_from_dict"]], "resolvers (auglib.transform.prependvalue attribute)": [[38, "auglib.transform.PrependValue.resolvers"]], "short_id (auglib.transform.prependvalue attribute)": [[38, "auglib.transform.PrependValue.short_id"]], "to_dict() (auglib.transform.prependvalue method)": [[38, "auglib.transform.PrependValue.to_dict"]], "to_samples() (auglib.transform.prependvalue method)": [[38, "auglib.transform.PrependValue.to_samples"]], "to_yaml() (auglib.transform.prependvalue method)": [[38, "auglib.transform.PrependValue.to_yaml"]], "to_yaml_s() (auglib.transform.prependvalue method)": [[38, "auglib.transform.PrependValue.to_yaml_s"]], "resample (class in auglib.transform)": [[39, "auglib.transform.Resample"]], "__call__() (auglib.transform.resample method)": [[39, "auglib.transform.Resample.__call__"]], "arguments (auglib.transform.resample attribute)": [[39, "auglib.transform.Resample.arguments"]], "borrowed_arguments (auglib.transform.resample attribute)": [[39, "auglib.transform.Resample.borrowed_arguments"]], "from_dict() (auglib.transform.resample static method)": [[39, "auglib.transform.Resample.from_dict"]], "from_yaml() (auglib.transform.resample static method)": [[39, "auglib.transform.Resample.from_yaml"]], "from_yaml_s() (auglib.transform.resample static method)": [[39, "auglib.transform.Resample.from_yaml_s"]], "hidden_arguments (auglib.transform.resample attribute)": [[39, "auglib.transform.Resample.hidden_arguments"]], "id (auglib.transform.resample attribute)": [[39, "auglib.transform.Resample.id"]], "is_loaded_from_dict (auglib.transform.resample attribute)": [[39, "auglib.transform.Resample.is_loaded_from_dict"]], "resolvers (auglib.transform.resample attribute)": [[39, "auglib.transform.Resample.resolvers"]], "short_id (auglib.transform.resample attribute)": [[39, "auglib.transform.Resample.short_id"]], "to_dict() (auglib.transform.resample method)": [[39, "auglib.transform.Resample.to_dict"]], "to_samples() (auglib.transform.resample method)": [[39, "auglib.transform.Resample.to_samples"]], "to_yaml() (auglib.transform.resample method)": [[39, "auglib.transform.Resample.to_yaml"]], "to_yaml_s() (auglib.transform.resample method)": [[39, "auglib.transform.Resample.to_yaml_s"]], "select (class in auglib.transform)": [[40, "auglib.transform.Select"]], "__call__() (auglib.transform.select method)": [[40, "auglib.transform.Select.__call__"]], "arguments (auglib.transform.select attribute)": [[40, "auglib.transform.Select.arguments"]], "borrowed_arguments (auglib.transform.select attribute)": [[40, "auglib.transform.Select.borrowed_arguments"]], "from_dict() (auglib.transform.select static method)": [[40, "auglib.transform.Select.from_dict"]], "from_yaml() (auglib.transform.select static method)": [[40, "auglib.transform.Select.from_yaml"]], "from_yaml_s() (auglib.transform.select static method)": [[40, "auglib.transform.Select.from_yaml_s"]], "hidden_arguments (auglib.transform.select attribute)": [[40, "auglib.transform.Select.hidden_arguments"]], "id (auglib.transform.select attribute)": [[40, "auglib.transform.Select.id"]], "is_loaded_from_dict (auglib.transform.select attribute)": [[40, "auglib.transform.Select.is_loaded_from_dict"]], "resolvers (auglib.transform.select attribute)": [[40, "auglib.transform.Select.resolvers"]], "short_id (auglib.transform.select attribute)": [[40, "auglib.transform.Select.short_id"]], "to_dict() (auglib.transform.select method)": [[40, "auglib.transform.Select.to_dict"]], "to_samples() (auglib.transform.select method)": [[40, "auglib.transform.Select.to_samples"]], "to_yaml() (auglib.transform.select method)": [[40, "auglib.transform.Select.to_yaml"]], "to_yaml_s() (auglib.transform.select method)": [[40, "auglib.transform.Select.to_yaml_s"]], "shift (class in auglib.transform)": [[41, "auglib.transform.Shift"]], "__call__() (auglib.transform.shift method)": [[41, "auglib.transform.Shift.__call__"]], "arguments (auglib.transform.shift attribute)": [[41, "auglib.transform.Shift.arguments"]], "borrowed_arguments (auglib.transform.shift attribute)": [[41, "auglib.transform.Shift.borrowed_arguments"]], "from_dict() (auglib.transform.shift static method)": [[41, "auglib.transform.Shift.from_dict"]], "from_yaml() (auglib.transform.shift static method)": [[41, "auglib.transform.Shift.from_yaml"]], "from_yaml_s() (auglib.transform.shift static method)": [[41, "auglib.transform.Shift.from_yaml_s"]], "hidden_arguments (auglib.transform.shift attribute)": [[41, "auglib.transform.Shift.hidden_arguments"]], "id (auglib.transform.shift attribute)": [[41, "auglib.transform.Shift.id"]], "is_loaded_from_dict (auglib.transform.shift attribute)": [[41, "auglib.transform.Shift.is_loaded_from_dict"]], "resolvers (auglib.transform.shift attribute)": [[41, "auglib.transform.Shift.resolvers"]], "short_id (auglib.transform.shift attribute)": [[41, "auglib.transform.Shift.short_id"]], "to_dict() (auglib.transform.shift method)": [[41, "auglib.transform.Shift.to_dict"]], "to_samples() (auglib.transform.shift method)": [[41, "auglib.transform.Shift.to_samples"]], "to_yaml() (auglib.transform.shift method)": [[41, "auglib.transform.Shift.to_yaml"]], "to_yaml_s() (auglib.transform.shift method)": [[41, "auglib.transform.Shift.to_yaml_s"]], "tone (class in auglib.transform)": [[42, "auglib.transform.Tone"]], "__call__() (auglib.transform.tone method)": [[42, "auglib.transform.Tone.__call__"]], "arguments (auglib.transform.tone attribute)": [[42, "auglib.transform.Tone.arguments"]], "borrowed_arguments (auglib.transform.tone attribute)": [[42, "auglib.transform.Tone.borrowed_arguments"]], "from_dict() (auglib.transform.tone static method)": [[42, "auglib.transform.Tone.from_dict"]], "from_yaml() (auglib.transform.tone static method)": [[42, "auglib.transform.Tone.from_yaml"]], "from_yaml_s() (auglib.transform.tone static method)": [[42, "auglib.transform.Tone.from_yaml_s"]], "hidden_arguments (auglib.transform.tone attribute)": [[42, "auglib.transform.Tone.hidden_arguments"]], "id (auglib.transform.tone attribute)": [[42, "auglib.transform.Tone.id"]], "is_loaded_from_dict (auglib.transform.tone attribute)": [[42, "auglib.transform.Tone.is_loaded_from_dict"]], "resolvers (auglib.transform.tone attribute)": [[42, "auglib.transform.Tone.resolvers"]], "short_id (auglib.transform.tone attribute)": [[42, "auglib.transform.Tone.short_id"]], "to_dict() (auglib.transform.tone method)": [[42, "auglib.transform.Tone.to_dict"]], "to_samples() (auglib.transform.tone method)": [[42, "auglib.transform.Tone.to_samples"]], "to_yaml() (auglib.transform.tone method)": [[42, "auglib.transform.Tone.to_yaml"]], "to_yaml_s() (auglib.transform.tone method)": [[42, "auglib.transform.Tone.to_yaml_s"]], "trim (class in auglib.transform)": [[43, "auglib.transform.Trim"]], "__call__() (auglib.transform.trim method)": [[43, "auglib.transform.Trim.__call__"]], "arguments (auglib.transform.trim attribute)": [[43, "auglib.transform.Trim.arguments"]], "borrowed_arguments (auglib.transform.trim attribute)": [[43, "auglib.transform.Trim.borrowed_arguments"]], "from_dict() (auglib.transform.trim static method)": [[43, "auglib.transform.Trim.from_dict"]], "from_yaml() (auglib.transform.trim static method)": [[43, "auglib.transform.Trim.from_yaml"]], "from_yaml_s() (auglib.transform.trim static method)": [[43, "auglib.transform.Trim.from_yaml_s"]], "hidden_arguments (auglib.transform.trim attribute)": [[43, "auglib.transform.Trim.hidden_arguments"]], "id (auglib.transform.trim attribute)": [[43, "auglib.transform.Trim.id"]], "is_loaded_from_dict (auglib.transform.trim attribute)": [[43, "auglib.transform.Trim.is_loaded_from_dict"]], "resolvers (auglib.transform.trim attribute)": [[43, "auglib.transform.Trim.resolvers"]], "short_id (auglib.transform.trim attribute)": [[43, "auglib.transform.Trim.short_id"]], "to_dict() (auglib.transform.trim method)": [[43, "auglib.transform.Trim.to_dict"]], "to_samples() (auglib.transform.trim method)": [[43, "auglib.transform.Trim.to_samples"]], "to_yaml() (auglib.transform.trim method)": [[43, "auglib.transform.Trim.to_yaml"]], "to_yaml_s() (auglib.transform.trim method)": [[43, "auglib.transform.Trim.to_yaml_s"]], "whitenoisegaussian (class in auglib.transform)": [[44, "auglib.transform.WhiteNoiseGaussian"]], "__call__() (auglib.transform.whitenoisegaussian method)": [[44, "auglib.transform.WhiteNoiseGaussian.__call__"]], "arguments (auglib.transform.whitenoisegaussian attribute)": [[44, "auglib.transform.WhiteNoiseGaussian.arguments"]], "borrowed_arguments (auglib.transform.whitenoisegaussian attribute)": [[44, "auglib.transform.WhiteNoiseGaussian.borrowed_arguments"]], "from_dict() (auglib.transform.whitenoisegaussian static method)": [[44, "auglib.transform.WhiteNoiseGaussian.from_dict"]], "from_yaml() (auglib.transform.whitenoisegaussian static method)": [[44, "auglib.transform.WhiteNoiseGaussian.from_yaml"]], "from_yaml_s() (auglib.transform.whitenoisegaussian static method)": [[44, "auglib.transform.WhiteNoiseGaussian.from_yaml_s"]], "hidden_arguments (auglib.transform.whitenoisegaussian attribute)": [[44, "auglib.transform.WhiteNoiseGaussian.hidden_arguments"]], "id (auglib.transform.whitenoisegaussian attribute)": [[44, "auglib.transform.WhiteNoiseGaussian.id"]], "is_loaded_from_dict (auglib.transform.whitenoisegaussian attribute)": [[44, "auglib.transform.WhiteNoiseGaussian.is_loaded_from_dict"]], "resolvers (auglib.transform.whitenoisegaussian attribute)": [[44, "auglib.transform.WhiteNoiseGaussian.resolvers"]], "short_id (auglib.transform.whitenoisegaussian attribute)": [[44, "auglib.transform.WhiteNoiseGaussian.short_id"]], "to_dict() (auglib.transform.whitenoisegaussian method)": [[44, "auglib.transform.WhiteNoiseGaussian.to_dict"]], "to_samples() (auglib.transform.whitenoisegaussian method)": [[44, "auglib.transform.WhiteNoiseGaussian.to_samples"]], "to_yaml() (auglib.transform.whitenoisegaussian method)": [[44, "auglib.transform.WhiteNoiseGaussian.to_yaml"]], "to_yaml_s() (auglib.transform.whitenoisegaussian method)": [[44, "auglib.transform.WhiteNoiseGaussian.to_yaml_s"]], "whitenoiseuniform (class in auglib.transform)": [[45, "auglib.transform.WhiteNoiseUniform"]], "__call__() (auglib.transform.whitenoiseuniform method)": [[45, "auglib.transform.WhiteNoiseUniform.__call__"]], "arguments (auglib.transform.whitenoiseuniform attribute)": [[45, "auglib.transform.WhiteNoiseUniform.arguments"]], "borrowed_arguments (auglib.transform.whitenoiseuniform attribute)": [[45, "auglib.transform.WhiteNoiseUniform.borrowed_arguments"]], "from_dict() (auglib.transform.whitenoiseuniform static method)": [[45, "auglib.transform.WhiteNoiseUniform.from_dict"]], "from_yaml() (auglib.transform.whitenoiseuniform static method)": [[45, "auglib.transform.WhiteNoiseUniform.from_yaml"]], "from_yaml_s() (auglib.transform.whitenoiseuniform static method)": [[45, "auglib.transform.WhiteNoiseUniform.from_yaml_s"]], "hidden_arguments (auglib.transform.whitenoiseuniform attribute)": [[45, "auglib.transform.WhiteNoiseUniform.hidden_arguments"]], "id (auglib.transform.whitenoiseuniform attribute)": [[45, "auglib.transform.WhiteNoiseUniform.id"]], "is_loaded_from_dict (auglib.transform.whitenoiseuniform attribute)": [[45, "auglib.transform.WhiteNoiseUniform.is_loaded_from_dict"]], "resolvers (auglib.transform.whitenoiseuniform attribute)": [[45, "auglib.transform.WhiteNoiseUniform.resolvers"]], "short_id (auglib.transform.whitenoiseuniform attribute)": [[45, "auglib.transform.WhiteNoiseUniform.short_id"]], "to_dict() (auglib.transform.whitenoiseuniform method)": [[45, "auglib.transform.WhiteNoiseUniform.to_dict"]], "to_samples() (auglib.transform.whitenoiseuniform method)": [[45, "auglib.transform.WhiteNoiseUniform.to_samples"]], "to_yaml() (auglib.transform.whitenoiseuniform method)": [[45, "auglib.transform.WhiteNoiseUniform.to_yaml"]], "to_yaml_s() (auglib.transform.whitenoiseuniform method)": [[45, "auglib.transform.WhiteNoiseUniform.to_yaml_s"]], "auglib.utils": [[46, "module-auglib.utils"]], "from_db() (in module auglib.utils)": [[47, "auglib.utils.from_db"]], "rms_db() (in module auglib.utils)": [[48, "auglib.utils.rms_db"]], "to_db() (in module auglib.utils)": [[49, "auglib.utils.to_db"]], "to_samples() (in module auglib.utils)": [[50, "auglib.utils.to_samples"]]}})